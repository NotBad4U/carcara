(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA__Mem smt__z smt__x) (smt__TLA__Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA__SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA__Mem smt__z smt__x) (smt__TLA__Mem smt__z smt__y))) (smt__TLA__SubsetEq smt__x smt__y)) :pattern ((smt__TLA__SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA__SubsetEq smt__x smt__y) (smt__TLA__Mem smt__z smt__x)) (smt__TLA__Mem smt__z smt__y)) :pattern ((smt__TLA__SubsetEq smt__x smt__y) (smt__TLA__Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA__Mem smt__x (smt__TLA__Subset smt__a)) (smt__TLA__SubsetEq smt__x smt__a)) :pattern ((smt__TLA__Mem smt__x (smt__TLA__Subset smt__a))) :pattern ((smt__TLA__SubsetEq smt__x smt__a) (smt__TLA__Subset smt__a)))))
(assume a4 (forall ((smt__f Idv) (smt__g Idv)) (! (=> (and (smt__TLA__FunIsafcn smt__f) (smt__TLA__FunIsafcn smt__g) (= (smt__TLA__FunDom smt__f) (smt__TLA__FunDom smt__g)) (forall ((smt__x Idv)) (=> (smt__TLA__Mem smt__x (smt__TLA__FunDom smt__f)) (= (smt__TLA__FunApp smt__f smt__x) (smt__TLA__FunApp smt__g smt__x))))) (= smt__f smt__g)) :pattern ((smt__TLA__FunIsafcn smt__f) (smt__TLA__FunIsafcn smt__g)))))
(assume a5 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (and (smt__TLA__FunIsafcn smt__f) (= (smt__TLA__FunDom smt__f) smt__a) (forall ((smt__x Idv)) (=> (smt__TLA__Mem smt__x smt__a) (smt__TLA__Mem (smt__TLA__FunApp smt__f smt__x) smt__b)))) (smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b))) :pattern ((smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b))))))
(assume a6 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b)) (and (smt__TLA__FunIsafcn smt__f) (= (smt__TLA__FunDom smt__f) smt__a))) :pattern ((smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b))))))
(assume a7 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv) (smt__x Idv)) (! (=> (and (smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b)) (smt__TLA__Mem smt__x smt__a)) (smt__TLA__Mem (smt__TLA__FunApp smt__f smt__x) smt__b)) :pattern ((smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b)) (smt__TLA__Mem smt__x smt__a)) :pattern ((smt__TLA__Mem smt__f (smt__TLA__FunSet smt__a smt__b)) (smt__TLA__FunApp smt__f smt__x)))))
(assume a8 (forall ((smt__x Idv)) (! (not (smt__TLA__Mem smt__x smt__TLA__SetEnum_0)) :pattern ((smt__TLA__Mem smt__x smt__TLA__SetEnum_0)))))
(assume a9 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))))
(assume a10 (smt__TLA__Mem smt__CONSTANT_f_ (smt__TLA__FunSet smt__CONSTANT_S_ (smt__TLA__Subset smt__CONSTANT_S_))))
(assume a11 (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_))
(assume a12 (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))))
(assume a13 (or (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))))
(assume a14 (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))))
(step t1 (cl (not (= (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (or (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (not (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (or (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_pos2)
(step t2 (cl (= (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) true) (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule equiv_simplify)
(step t3 (cl (not (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) true)) (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule equiv1 :premises (t2))
(step t4 (cl (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))))) :rule all_simplify)
(step t5 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule refl)
(step t6 (cl (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule all_simplify)
(step t7 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule cong :premises (t5 t6))
(step t8 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) true)) :rule all_simplify)
(step t9 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) true)) :rule trans :premises (t7 t8))
(step t10 (cl (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) true)) :rule trans :premises (t4 t9))
(step t11 (cl (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule resolution :premises (t3 t10))
(step t12 (cl (= (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule refl)
(step t13 (cl (= (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule refl)
(step t14 (cl (= (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (or (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule cong :premises (t11 t12 t13))
(step t15 (cl (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_neg)
(step t16 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg1)
(anchor :step t17)
(assume t17.a0 (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))
(assume t17.a1 (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))
(step t17.t1 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg1)
(anchor :step t17.t2)
(assume t17.t2.a0 (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))
(assume t17.t2.a1 (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))
(step t17.t2.t1 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) false) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_simplify)
(step t17.t2.t2 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) false)) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule equiv1 :premises (t17.t2.t1))
(step t17.t2.t3 (cl (= smt__CONSTANT_x_ smt__CONSTANT_x_)) :rule refl)
(step t17.t2.t4 (cl (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule symm :premises (t17.t2.a1))
(step t17.t2.t5 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule cong :premises (t17.t2.t3 t17.t2.t4))
(step t17.t2.t6 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) false) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule equiv_simplify)
(step t17.t2.t7 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) false) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule equiv2 :premises (t17.t2.t6))
(step t17.t2.t8 (cl (not (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule not_not)
(step t17.t2.t9 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) false) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule resolution :premises (t17.t2.t7 t17.t2.t8))
(step t17.t2.t10 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) false)) :rule resolution :premises (t17.t2.t9 t17.t2.a0))
(step t17.t2.t11 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) false)) :rule trans :premises (t17.t2.t5 t17.t2.t10))
(step t17.t2.t12 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t17.t2.t2 t17.t2.t11))
(step t17.t2 (cl (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule subproof :discharge (t17.t2.a0 t17.t2.a1))
(step t17.t3 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule and_pos)
(step t17.t4 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule and_pos)
(step t17.t5 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t17.t2 t17.t3 t17.t4))
(step t17.t6 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule reordering :premises (t17.t5))
(step t17.t7 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule contraction :premises (t17.t6))
(step t17.t8 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t17.t1 t17.t7))
(step t17.t9 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule implies_neg2)
(step t17.t10 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t17.t8 t17.t9))
(step t17.t11 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule contraction :premises (t17.t10))
(step t17.t12 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies :premises (t17.t11))
(step t17.t13 (cl (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_neg)
(step t17.t14 (cl (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t17.t13 t17.a0 t17.a1))
(step t17.t15 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t17.t12 t17.t14))
(step t17 (cl (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule subproof :discharge (t17.a0 t17.a1))
(step t18 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule and_pos)
(step t19 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule and_pos)
(step t20 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t17 t18 t19))
(step t21 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule reordering :premises (t20))
(step t22 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule contraction :premises (t21))
(step t23 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t16 t22))
(step t24 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule implies_neg2)
(step t25 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t23 t24))
(step t26 (cl (=> (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule contraction :premises (t25))
(step t27 (cl (not (and (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies :premises (t26))
(step t28 (cl (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t15 t27))
(step t29 (cl (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))))) :rule or_neg)
(step t30 (cl (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule or_neg)
(step t31 (cl (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule or_neg)
(step t32 (cl (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t28 t29 t30 t31))
(step t33 (cl (or (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule contraction :premises (t32))
(step t34 (cl (or (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t1 t14 t33))
(step t35 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule or :premises (t34))
(step t36 (cl (not (= (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule equiv_pos2)
(step t37 (cl (= (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule refl)
(step t38 (cl (= (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)))) :rule refl)
(step t39 (cl (= (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) true) (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_simplify)
(step t40 (cl (not (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) true)) (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule equiv1 :premises (t39))
(step t41 (cl (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule all_simplify)
(step t42 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule refl)
(step t43 (cl (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule all_simplify)
(step t44 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule cong :premises (t42 t43))
(step t45 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) true)) :rule all_simplify)
(step t46 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) true)) :rule trans :premises (t44 t45))
(step t47 (cl (= (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) true)) :rule trans :premises (t41 t46))
(step t48 (cl (= (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t40 t47))
(step t49 (cl (= (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule cong :premises (t37 t38 t48))
(step t50 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule and_neg)
(step t51 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule or_neg)
(step t52 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)))) :rule or_neg)
(step t53 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule or_neg)
(step t54 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t50 t51 t52 t53))
(step t55 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule contraction :premises (t54))
(step t56 (cl (or (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t36 t49 t55))
(step t57 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule or :premises (t56))
(step t58 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule reordering :premises (t57))
(step t59 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule equiv_pos1)
(step t60 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule reordering :premises (t59))
(step t61 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_neg)
(step t62 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg1)
(anchor :step t63)
(assume t63.a0 (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))
(assume t63.a1 (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))
(step t63.t1 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg1)
(anchor :step t63.t2)
(assume t63.t2.a0 (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))
(assume t63.t2.a1 (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))
(step t63.t2.t1 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) true) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule equiv_simplify)
(step t63.t2.t2 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) true)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule equiv1 :premises (t63.t2.t1))
(step t63.t2.t3 (cl (= smt__CONSTANT_x_ smt__CONSTANT_x_)) :rule refl)
(step t63.t2.t4 (cl (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule symm :premises (t63.t2.a1))
(step t63.t2.t5 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule cong :premises (t63.t2.t3 t63.t2.t4))
(step t63.t2.t6 (cl (= (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) true) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule equiv_simplify)
(step t63.t2.t7 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) true) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule equiv2 :premises (t63.t2.t6))
(step t63.t2.t8 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) true)) :rule resolution :premises (t63.t2.t7 t63.t2.a0))
(step t63.t2.t9 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) true)) :rule trans :premises (t63.t2.t5 t63.t2.t8))
(step t63.t2.t10 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t63.t2.t2 t63.t2.t9))
(step t63.t2 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule subproof :discharge (t63.t2.a0 t63.t2.a1))
(step t63.t3 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule and_pos)
(step t63.t4 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule and_pos)
(step t63.t5 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t63.t2 t63.t3 t63.t4))
(step t63.t6 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule reordering :premises (t63.t5))
(step t63.t7 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule contraction :premises (t63.t6))
(step t63.t8 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t63.t1 t63.t7))
(step t63.t9 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg2)
(step t63.t10 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t63.t8 t63.t9))
(step t63.t11 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule contraction :premises (t63.t10))
(step t63.t12 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule implies :premises (t63.t11))
(step t63.t13 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_neg)
(step t63.t14 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t63.t13 t63.a0 t63.a1))
(step t63.t15 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t63.t12 t63.t14))
(step t63 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule subproof :discharge (t63.a0 t63.a1))
(step t64 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule and_pos)
(step t65 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule and_pos)
(step t66 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t63 t64 t65))
(step t67 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule reordering :premises (t66))
(step t68 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule contraction :premises (t67))
(step t69 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t62 t68))
(step t70 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies_neg2)
(step t71 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t69 t70))
(step t72 (cl (=> (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule contraction :premises (t71))
(step t73 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule implies :premises (t72))
(step t74 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t61 t73))
(step t75 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule reordering :premises (t74))
(step t76 (cl (not (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule equiv_pos2)
(step t77 (cl (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (not (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule reordering :premises (t76))
(step t78 (cl (not (= (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule equiv_pos2)
(step t79 (cl (= (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule all_simplify)
(step t80 (cl (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule resolution :premises (t78 t79 a14))
(step t81 (cl (not (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (not (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_pos2)
(step t82 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))))) :rule refl)
(step t83 (cl (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule refl)
(step t84 (cl (= (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule all_simplify)
(step t85 (cl (= (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule cong :premises (t83 t84))
(step t86 (cl (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule cong :premises (t82 t85))
(step t87 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t88)
(assume t88.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))))
(step t88.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule forall_inst :args ((:= smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (:= smt__y (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))
(step t88.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule or :premises (t88.t1))
(step t88.t3 (cl (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule resolution :premises (t88.t2 t88.a0))
(step t88 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule subproof :discharge (t88.a0))
(step t89 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule resolution :premises (t87 t88))
(step t90 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (not (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule implies_neg2)
(step t91 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule resolution :premises (t89 t90))
(step t92 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) :rule contraction :premises (t91))
(step t93 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule resolution :premises (t81 t86 t92))
(step t94 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule implies :premises (t93))
(step t95 (cl (= (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t94 a9))
(step t96 (cl (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t77 t80 t95))
(step t97 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_pos)
(step t98 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule reordering :premises (t97))
(step t99 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_pos2)
(step t100 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule reordering :premises (t99))
(step t101 (cl (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) :rule implies_neg1)
(anchor :step t102)
(assume t102.a0 (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))))
(step t102.t1 (cl (or (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule forall_inst :args ((:= smt__a smt__CONSTANT_S_) (:= smt__x smt__CONSTANT_x_)))
(step t102.t2 (cl (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule or :premises (t102.t1))
(step t102.t3 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t102.t2 t102.a0))
(step t102 (cl (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule subproof :discharge (t102.a0))
(step t103 (cl (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t101 t102))
(step t104 (cl (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule implies_neg2)
(step t105 (cl (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule resolution :premises (t103 t104))
(step t106 (cl (=> (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule contraction :premises (t105))
(step t107 (cl (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule implies :premises (t106))
(step t108 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t107 a12))
(step t109 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule resolution :premises (t75 t96 t98 t100 t108))
(step t110 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule contraction :premises (t109))
(step t111 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t60 t110 t108))
(step t112 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t58 a11 t111))
(step t113 (cl) :rule resolution :premises (t35 t112 t110 t96))


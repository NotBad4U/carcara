(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a))))
(assume a4 (forall ((smt__f Idv) (smt__g Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g) (= (smt__TLA______FunDom smt__f) (smt__TLA______FunDom smt__g)) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp smt__f smt__x) (smt__TLA______FunApp smt__g smt__x))))) (= smt__f smt__g)) :pattern ((smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g)))))
(assume a5 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)))) (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))))))
(assume a6 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a))) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))))))
(assume a7 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv) (smt__x Idv)) (! (=> (and (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______FunApp smt__f smt__x)))))
(assume a8 (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0))))
(assume a9 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(assume a10 (forall ((smt__a Idv)) (! (smt__TLA______FunIsafcn (smt__TLA______FunFcn___flatnd___1 smt__a)) :pattern ((smt__TLA______FunFcn___flatnd___1 smt__a)))))
(assume a11 (forall ((smt__a Idv)) (! (= (smt__TLA______FunDom (smt__TLA______FunFcn___flatnd___1 smt__a)) smt__a) :pattern ((smt__TLA______FunFcn___flatnd___1 smt__a)))))
(assume a12 (forall ((smt__a Idv) (smt__x Idv)) (! (=> (smt__TLA______Mem smt__x smt__a) (= (smt__TLA______FunApp (smt__TLA______FunFcn___flatnd___1 smt__a) smt__x) smt__TLA______SetEnum___0)) :pattern ((smt__TLA______FunApp (smt__TLA______FunFcn___flatnd___1 smt__a) smt__x)) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______FunFcn___flatnd___1 smt__a)))))
(assume a13 (forall ((smt__a Idv) (smt__b Idv)) (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))))
(assume a14 (not (=> (and (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))))
(step t1 (cl (not (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule not_implies2 :premises (a14))
(step t2 (cl (not (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule not_and :premises (t1))
(step t3 (cl (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule and_neg)
(step t4 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg1)
(anchor :step t5)
(assume t5.a0 (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(assume t5.a1 (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))
(step t5.t1 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg1)
(anchor :step t5.t2)
(assume t5.t2.a0 (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(assume t5.t2.a1 (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))
(step t5.t2.t1 (cl (= (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv_simplify)
(step t5.t2.t2 (cl (not (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule equiv1 :premises (t5.t2.t1))
(step t5.t2.t3 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t5.t2.t4 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t5.t2.t3))
(step t5.t2.t5 (cl (and (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule not_implies1 :premises (a14))
(step t5.t2.t6 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t5.t2.t5))
(step t5.t2.t7 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t5.t2.t8 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t5.t2.t7))
(step t5.t2.t9 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t5.t2.t8 a9))
(step t5.t2.t10 (cl (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t5.t2.t4 t5.t2.t6 t5.t2.t9))
(step t5.t2.t11 (cl (= (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t5.t2.t12 (cl (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule cong :premises (t5.t2.t10 t5.t2.t11))
(step t5.t2.t13 (cl (= (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv_simplify)
(step t5.t2.t14 (cl (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv2 :premises (t5.t2.t13))
(step t5.t2.t15 (cl (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) :rule resolution :premises (t5.t2.t14 t5.t2.a1))
(step t5.t2.t16 (cl (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) :rule trans :premises (t5.t2.t12 t5.t2.t15))
(step t5.t2.t17 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t5.t2.t2 t5.t2.t16))
(step t5.t2 (cl (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule subproof :discharge (t5.t2.a0 t5.t2.a1))
(step t5.t3 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t5.t4 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and_pos)
(step t5.t5 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule resolution :premises (t5.t2 t5.t3 t5.t4))
(step t5.t6 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule reordering :premises (t5.t5))
(step t5.t7 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule contraction :premises (t5.t6))
(step t5.t8 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t5.t1 t5.t7))
(step t5.t9 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg2)
(step t5.t10 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t5.t8 t5.t9))
(step t5.t11 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule contraction :premises (t5.t10))
(step t5.t12 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule implies :premises (t5.t11))
(step t5.t13 (cl (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule and_neg)
(step t5.t14 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t5.t15 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t5.t14))
(step t5.t16 (cl (and (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule not_implies1 :premises (a14))
(step t5.t17 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t5.t16))
(step t5.t18 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t5.t19 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t5.t18))
(step t5.t20 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t5.t19 a9))
(step t5.t21 (cl (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t5.t15 t5.t17 t5.t20))
(step t5.t22 (cl (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t5.t13 t5.t21 t5.a1))
(step t5.t23 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t5.t12 t5.t22))
(step t5 (cl (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule subproof :discharge (t5.a0 t5.a1))
(step t6 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t7 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and_pos)
(step t8 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule resolution :premises (t5 t6 t7))
(step t9 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule reordering :premises (t8))
(step t10 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule contraction :premises (t9))
(step t11 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t4 t10))
(step t12 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg2)
(step t13 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t11 t12))
(step t14 (cl (=> (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule contraction :premises (t13))
(step t15 (cl (not (and (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule implies :premises (t14))
(step t16 (cl (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t3 t15))
(step t17 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule reordering :premises (t16))
(step t18 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t19 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t18))
(step t20 (cl (and (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule not_implies1 :premises (a14))
(step t21 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t20))
(step t22 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t23 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t22))
(step t24 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t23 a9))
(step t25 (cl (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t19 t21 t24))
(step t26 (cl (not (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule or_pos)
(step t27 (cl (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule reordering :premises (t26))
(step t28 (cl (not (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___)))))) (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and_pos)
(step t29 (cl (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))))) :rule reordering :premises (t28))
(step t30 (cl (not (= (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (not (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) :rule equiv_pos1)
(step t31 (cl (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (not (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)) (not (= (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)))) :rule reordering :premises (t30))
(step t32 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)) :rule or_pos)
(step t33 (cl (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)))) :rule reordering :premises (t32))
(step t34 (cl (not (= (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (or (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))))) (not (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) (or (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule equiv_pos2)
(step t35 (cl (= (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) :rule rare_rewrite :args ("bool-double-not-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))))
(step t36 (cl (= (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule refl)
(step t37 (cl (= (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (or (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))))) :rule cong :premises (t35 t36))
(step t38 (cl (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) :rule implies_neg1)
(anchor :step t39)
(assume t39.a0 (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))))
(step t39.t1 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule equiv_pos2)
(anchor :step t39.t2 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))))))
(step t39.t2.t1 (cl (= (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule refl)
(step t39.t2 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule sko_forall)
(step t39.t3 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule cong :premises (t39.t2))
(step t39.t4 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule resolution :premises (t39.t1 t39.t3 t39.a0))
(step t39 (cl (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule subproof :discharge (t39.a0))
(step t40 (cl (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule resolution :premises (t38 t39))
(step t41 (cl (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (not (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule implies_neg2)
(step t42 (cl (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule resolution :premises (t40 t41))
(step t43 (cl (=> (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule contraction :premises (t42))
(step t44 (cl (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule implies :premises (t43))
(step t45 (cl (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (not (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))))) :rule or_neg)
(step t46 (cl (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (not (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule or_neg)
(step t47 (cl (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule resolution :premises (t44 t45 t46))
(step t48 (cl (or (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule contraction :premises (t47))
(step t49 (cl (or (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))))) :rule resolution :premises (t34 t37 t48))
(step t50 (cl (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule or :premises (t49))
(step t51 (cl (not (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (not (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) :rule equiv_pos2)
(step t52 (cl (= (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule refl)
(step t53 (cl (= (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) :rule rare_rewrite :args ("bool-double-not-elim" (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))
(step t54 (cl (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) :rule cong :premises (t52 t53))
(step t55 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) :rule or_neg)
(step t56 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)))) :rule or_neg)
(step t57 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))))) :rule or_neg)
(step t58 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))))) :rule resolution :premises (t55 t56 t57))
(step t59 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))))) :rule contraction :premises (t58))
(step t60 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) :rule resolution :premises (t51 t54 t59))
(step t61 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) :rule or :premises (t60))
(step t62 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))) :rule reordering :premises (t61))
(step t63 (cl (or (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)))) :rule forall_inst :args ((:= smt__x (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))))))
(step t64 (cl (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) :rule or :premises (t63))
(step t65 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0))) :rule resolution :premises (t64 a8))
(step t66 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__TLA______SetEnum___0)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) smt__CONSTANT___Resource___))) :rule resolution :premises (t62 t65))
(step t67 (cl (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) :rule resolution :premises (t50 t66))
(step t68 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)))) :rule forall_inst :args ((:= smt__x smt__TLA______SetEnum___0) (:= smt__y smt__CONSTANT___Resource___)))
(step t69 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) :rule or :premises (t68))
(step t70 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t71 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t71.t1 (cl (= smt__x smt__x)) :rule refl)
(step t71.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t71.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t71.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t71.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t71.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t71.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t71.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t71.t3 t71.t4))
(step t71 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t72 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t72.t1 (cl (= smt__x smt__x)) :rule refl)
(step t72.t2 (cl (= smt__y smt__y)) :rule refl)
(step t72.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t72 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t73 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t71 t72))
(step t74 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t70 t73 a1))
(step t75 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__TLA______SetEnum___0)) (smt__TLA______Mem smt__z smt__CONSTANT___Resource___)))) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) :rule resolution :premises (t69 t74))
(step t76 (cl (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)) :rule resolution :premises (t33 t67 t75))
(step t77 (cl (or (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)))) (= (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___)))) :rule forall_inst :args ((:= smt__a smt__CONSTANT___Resource___) (:= smt__x smt__TLA______SetEnum___0)))
(step t78 (cl (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)))) (= (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) :rule or :premises (t77))
(step t79 (cl (= (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______SubsetEq smt__TLA______SetEnum___0 smt__CONSTANT___Resource___))) :rule resolution :premises (t78 a3))
(step t80 (cl (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) :rule resolution :premises (t31 t76 t79))
(step t81 (cl (not (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))))) :rule resolution :premises (t29 t80))
(step t82 (cl (or (not (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule forall_inst :args ((:= smt__a smt__CONSTANT___Client___) (:= smt__b (smt__TLA______Subset smt__CONSTANT___Resource___))))
(step t83 (cl (not (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule or :premises (t82))
(step t84 (cl (not (= (forall ((smt__a Idv) (smt__b Idv)) (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))) (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))))) (not (forall ((smt__a Idv) (smt__b Idv)) (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) :rule equiv_pos2)
(anchor :step t85 :args ((smt__a Idv) (:= smt__a smt__a) (smt__b Idv) (:= smt__b smt__b)))
(step t85.t1 (cl (= smt__a smt__a)) :rule refl)
(step t85.t2 (cl (= smt__b smt__b)) :rule refl)
(anchor :step t85.t3 :args ((smt__x Idv) (:= smt__x smt__x)))
(step t85.t3.t1 (cl (= smt__x smt__x)) :rule refl)
(step t85.t3.t2 (cl (= (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (or (not (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)))
(step t85.t3 (cl (= (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (forall ((smt__x Idv)) (or (not (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))))) :rule bind)
(step t85.t4 (cl (= (forall ((smt__x Idv)) (or (not (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (or (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b) (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a)))))) :rule all_simplify)
(step t85.t5 (cl (= (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (or (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b) (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a)))))) :rule trans :premises (t85.t3 t85.t4))
(step t85.t6 (cl (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))) :rule refl)
(step t85.t7 (cl (= (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))) (=> (or (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b) (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a)))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) :rule cong :premises (t85.t5 t85.t6))
(step t85 (cl (= (forall ((smt__a Idv) (smt__b Idv)) (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))) (forall ((smt__a Idv) (smt__b Idv)) (=> (or (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b) (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a)))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))))) :rule bind)
(step t86 (cl (= (forall ((smt__a Idv) (smt__b Idv)) (=> (or (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b) (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a)))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))) (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))))) :rule all_simplify)
(step t87 (cl (= (forall ((smt__a Idv) (smt__b Idv)) (=> (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))) (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b)))))) :rule trans :premises (t85 t86))
(step t88 (cl (forall ((smt__a Idv) (smt__b Idv)) (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 smt__b)) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__a))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__a) (smt__TLA______FunSet smt__a smt__b))))) :rule resolution :premises (t84 t87 a13))
(step t89 (cl (or (and (not (smt__TLA______Mem smt__TLA______SetEnum___0 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (forall ((smt__x Idv)) (not (smt__TLA______Mem smt__x smt__CONSTANT___Client___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t83 t88))
(step t90 (cl (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t27 t81 t89))
(step t91 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t17 t25 t90))
(step t92 (cl (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule and_neg)
(step t93 (cl (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg1)
(anchor :step t94)
(assume t94.a0 (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(assume t94.a1 (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(assume t94.a2 (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))
(step t94.t1 (cl (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule implies_neg1)
(anchor :step t94.t2)
(assume t94.t2.a0 (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))
(assume t94.t2.a1 (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(assume t94.t2.a2 (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))
(step t94.t2.t1 (cl (= (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv_simplify)
(step t94.t2.t2 (cl (not (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule equiv1 :premises (t94.t2.t1))
(step t94.t2.t3 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t94.t2.t4 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t94.t2.t3))
(step t94.t2.t5 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t20))
(step t94.t2.t6 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___unsat___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t94.t2.t7 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t94.t2.t6))
(step t94.t2.t8 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t94.t2.t7 a9))
(step t94.t2.t9 (cl (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t94.t2.t4 t94.t2.t5 t94.t2.t8))
(step t94.t2.t10 (cl (= (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) smt__VARIABLE___unsat___)) :rule symm :premises (t94.t2.t9))
(step t94.t2.t11 (cl (= smt__VARIABLE___alloc___ smt__VARIABLE___unsat___)) :rule trans :premises (t25 t94.t2.t10))
(step t94.t2.t12 (cl (= smt__VARIABLE___unsat___ smt__VARIABLE___alloc___)) :rule symm :premises (t94.t2.t11))
(step t94.t2.t13 (cl (= (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t94.t2.t14 (cl (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule cong :premises (t94.t2.t12 t94.t2.t13))
(step t94.t2.t15 (cl (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule cong :premises (t25 t94.t2.t13))
(step t94.t2.t16 (cl (= (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv_simplify)
(step t94.t2.t17 (cl (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule equiv2 :premises (t94.t2.t16))
(step t94.t2.t18 (cl (= (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) :rule resolution :premises (t94.t2.t17 t94.t2.a0))
(step t94.t2.t19 (cl (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) true)) :rule trans :premises (t94.t2.t14 t94.t2.t15 t94.t2.t18))
(step t94.t2.t20 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t94.t2.t2 t94.t2.t19))
(step t94.t2 (cl (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule subproof :discharge (t94.t2.a0 t94.t2.a1 t94.t2.a2))
(step t94.t3 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and_pos)
(step t94.t4 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t94.t5 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t94.t6 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule resolution :premises (t94.t2 t94.t3 t94.t4 t94.t5))
(step t94.t7 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule reordering :premises (t94.t6))
(step t94.t8 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule contraction :premises (t94.t7))
(step t94.t9 (cl (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t94.t1 t94.t8))
(step t94.t10 (cl (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg2)
(step t94.t11 (cl (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t94.t9 t94.t10))
(step t94.t12 (cl (=> (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule contraction :premises (t94.t11))
(step t94.t13 (cl (not (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule implies :premises (t94.t12))
(step t94.t14 (cl (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule and_neg)
(step t94.t15 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t94.t16 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t94.t15))
(step t94.t17 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t20))
(step t94.t18 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___unsat___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t94.t19 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t94.t18))
(step t94.t20 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t94.t19 a9))
(step t94.t21 (cl (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t94.t16 t94.t17 t94.t20))
(step t94.t22 (cl (and (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t94.t14 t94.a2 t94.t21 t25))
(step t94.t23 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t94.t13 t94.t22))
(step t94 (cl (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule subproof :discharge (t94.a0 t94.a1 t94.a2))
(step t95 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t96 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and_pos)
(step t97 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and_pos)
(step t98 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))))) :rule resolution :premises (t94 t95 t96 t97))
(step t99 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule reordering :premises (t98))
(step t100 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule contraction :premises (t99))
(step t101 (cl (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t93 t100))
(step t102 (cl (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (not (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule implies_neg2)
(step t103 (cl (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule resolution :premises (t101 t102))
(step t104 (cl (=> (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule contraction :premises (t103))
(step t105 (cl (not (and (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule implies :premises (t104))
(step t106 (cl (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t92 t105))
(step t107 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (= smt__VARIABLE___alloc___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___) (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule reordering :premises (t106))
(step t108 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule equiv_pos2)
(step t109 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule reordering :premises (t108))
(step t110 (cl (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule and :premises (t20))
(step t111 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___unsat___) (:= smt__y (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))))
(step t112 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule or :premises (t111))
(step t113 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)) (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___)))) :rule resolution :premises (t112 a9))
(step t114 (cl (= smt__VARIABLE___unsat___ (smt__TLA______FunFcn___flatnd___1 smt__CONSTANT___Client___))) :rule resolution :premises (t109 t110 t113))
(step t115 (cl (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule resolution :premises (t107 t114 t25 t90))
(step t116 (cl) :rule resolution :premises (t2 t91 t115))


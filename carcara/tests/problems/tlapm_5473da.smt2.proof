(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__x smt__b))) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b))) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______Cap smt__a smt__b)) :pattern ((smt__TLA______Mem smt__x smt__b) (smt__TLA______Cap smt__a smt__b)))))
(assume a5 (forall ((smt__f Idv) (smt__g Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g) (= (smt__TLA______FunDom smt__f) (smt__TLA______FunDom smt__g)) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp smt__f smt__x) (smt__TLA______FunApp smt__g smt__x))))) (= smt__f smt__g)) :pattern ((smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g)))))
(assume a6 (forall ((smt__x Idv) (smt__y Idv)) (! (smt__TLA______SetExtTrigger (smt__TLA______Cap smt__x smt__y) smt__TLA______SetEnum___0) :pattern ((smt__TLA______Cap smt__x smt__y)))))
(assume a7 (forall ((smt__x Idv)) (! (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0)) :pattern ((smt__TLA______Mem smt__x smt__TLA______SetEnum___0)))))
(assume a8 (forall ((smt__x Idv) (smt__y Idv)) (! (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)) :pattern ((smt__TLA______TrigEq___Idv smt__x smt__y)))))
(assume a9 (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))
(assume a10 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a11 (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))))))
(assume a12 (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))))
(step t1 (cl (not (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) (not (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))) (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule equiv_pos2)
(step t2 (cl (= (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)))) :rule rare_rewrite :args ("bool-and-flatten" rare-list (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (rare-list (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (rare-list (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))))
(step t3 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule rare_rewrite :args ("eq-symm" smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv))
(anchor :step t4 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___)))
(step t4.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t4.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t4.t3 (cl (= (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)))) :rule refl)
(step t4.t4 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) :rule all_simplify)
(step t4.t5 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule all_simplify)
(step t4.t6 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule trans :premises (t4.t4 t4.t5))
(step t4.t7 (cl (= (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))))) :rule cong :premises (t4.t3 t4.t6))
(step t4 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))))) :rule bind)
(step t5 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))))) :rule all_simplify)
(step t6 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule all_simplify)
(anchor :step t7 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___) (BOUND_VARIABLE_5161 Idv) (:= BOUND_VARIABLE_5161 BOUND_VARIABLE_5161)))
(step t7.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t7.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t7.t3 (cl (= BOUND_VARIABLE_5161 BOUND_VARIABLE_5161)) :rule refl)
(step t7.t4 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (rare-list (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) rare-list))
(step t7 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule bind)
(step t8 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t6 t7))
(step t9 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t5 t8))
(step t10 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t4 t9))
(step t11 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))
(step t12 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))))) :rule cong :premises (t3 t10 t11))
(step t13 (cl (= (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))))) :rule trans :premises (t2 t12))
(anchor :step t14 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___)))
(step t14.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t14.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t14.t3 (cl (= (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)))) :rule refl)
(step t14.t4 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) :rule all_simplify)
(step t14.t5 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule all_simplify)
(step t14.t6 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule trans :premises (t14.t4 t14.t5))
(step t14.t7 (cl (= (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule cong :premises (t14.t3 t14.t6))
(step t14 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))))) :rule bind)
(step t15 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule all_simplify)
(step t16 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule all_simplify)
(anchor :step t17 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___) (BOUND_VARIABLE_5190 Idv) (:= BOUND_VARIABLE_5190 BOUND_VARIABLE_5190)))
(step t17.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t17.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t17.t3 (cl (= BOUND_VARIABLE_5190 BOUND_VARIABLE_5190)) :rule refl)
(step t17.t4 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (rare-list (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))) rare-list))
(step t17 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule bind)
(step t18 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t16 t17))
(step t19 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t15 t18))
(step t20 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t14 t19))
(step t21 (cl (= (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule cong :premises (t13 t20))
(step t22 (cl (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule cong :premises (t21))
(step t23 (cl (not (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) (not (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))) (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule equiv_pos2)
(step t24 (cl (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule resolution :premises (t23 t22 a12))
(step t25 (cl (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule not_implies1 :premises (t24))
(step t26 (cl (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) :rule and :premises (t25))
(step t27 (cl (not (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__STATE___TypeInvariant___ (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (= smt__STATE___TypeInvariant___ (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) :rule equiv_pos2)
(step t28 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t25))
(step t29 (cl (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) :rule refl)
(step t30 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__STATE___TypeInvariant___ (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule cong :premises (t28 t29))
(step t31 (cl (= smt__STATE___TypeInvariant___ (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) :rule resolution :premises (t27 t30 t26))
(step t32 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule cong :premises (t26 t31))
(step t33 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule refl)
(step t34 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule cong :premises (t26 t29))
(step t35 (cl (= (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))))) :rule cong :premises (t32 t33 t34))
(step t36 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule refl)
(step t37 (cl (= (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) (=> (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule cong :premises (t35 t36))
(step t38 (cl (= (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (not (=> (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule cong :premises (t37))
(step t39 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) true)) :rule rare_rewrite :args ("eq-refl" (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))
(step t40 (cl (= (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (and true (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true))) :rule cong :premises (t39 t33 t39))
(step t41 (cl (= (and true (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true) (and (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true))) :rule rare_rewrite :args ("bool-and-true" rare-list (rare-list (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true)))
(step t42 (cl (= (and (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule rare_rewrite :args ("bool-and-true" (rare-list (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) rare-list))
(step t43 (cl (= (and true (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) true) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t41 t42))
(step t44 (cl (= (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t40 t43))
(step t45 (cl (= (=> (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule cong :premises (t44 t36))
(step t46 (cl (= (not (=> (and (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule cong :premises (t45))
(step t47 (cl (= (not (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule trans :premises (t38 t46))
(step t48 (cl (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule trans :premises (t22 t47))
(step t49 (cl (not (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule resolution :premises (t1 t48 a12))
(step t50 (cl (not (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule not_implies2 :premises (t49))
(step t51 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule hole)
(step t52 (cl (not (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) :rule equiv1 :premises (t51))
(step t53 (cl (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))) (not (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule reordering :premises (t52))
(step t54 (cl (not (= (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) (not (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule equiv_pos2)
(anchor :step t55 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___)))
(step t55.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t55.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t55.t3 (cl (= (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)))) :rule refl)
(step t55.t4 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) :rule all_simplify)
(step t55.t5 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule all_simplify)
(step t55.t6 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule trans :premises (t55.t4 t55.t5))
(step t55.t7 (cl (= (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))))) :rule cong :premises (t55.t3 t55.t6))
(step t55 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))))) :rule bind)
(step t56 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))))) :rule all_simplify)
(step t57 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) :rule all_simplify)
(anchor :step t58 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___) (BOUND_VARIABLE_5078 Idv) (:= BOUND_VARIABLE_5078 BOUND_VARIABLE_5078)))
(step t58.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t58.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t58.t3 (cl (= BOUND_VARIABLE_5078 BOUND_VARIABLE_5078)) :rule refl)
(step t58.t4 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (rare-list (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) rare-list))
(step t58 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule bind)
(step t59 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t57 t58))
(step t60 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t56 t59))
(step t61 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule trans :premises (t55 t60))
(anchor :step t62 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___)))
(step t62.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t62.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule refl)
(anchor :step t62.t3 :args ((smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___)))
(step t62.t3.t1 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t62.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))) :rule refl)
(step t62.t3.t3 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) :rule all_simplify)
(step t62.t3.t4 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule all_simplify)
(step t62.t3.t5 (cl (= (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule trans :premises (t62.t3.t3 t62.t3.t4))
(step t62.t3.t6 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule cong :premises (t62.t3.t2 t62.t3.t5))
(step t62.t3 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))))) :rule bind)
(anchor :step t62.t4 :args ((smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___)))
(step t62.t4.t1 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t62.t4.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))
(step t62.t4.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (rare-list (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) rare-list))
(step t62.t4.t4 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule trans :premises (t62.t4.t2 t62.t4.t3))
(step t62.t4 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule bind)
(step t62.t5 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule all_simplify)
(anchor :step t62.t6 :args ((smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___) (BOUND_VARIABLE_5104 Idv) (:= BOUND_VARIABLE_5104 BOUND_VARIABLE_5104)))
(step t62.t6.t1 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t62.t6.t2 (cl (= BOUND_VARIABLE_5104 BOUND_VARIABLE_5104)) :rule refl)
(step t62.t6.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (rare-list (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))) rare-list))
(step t62.t6 (cl (= (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (or (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule bind)
(step t62.t7 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t62.t5 t62.t6))
(step t62.t8 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (forall ((smt__CONSTANT___r___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___)) (not (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t62.t4 t62.t7))
(step t62.t9 (cl (= (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) :rule trans :premises (t62.t3 t62.t8))
(step t62.t10 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule cong :premises (t62.t2 t62.t9))
(step t62 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule bind)
(anchor :step t63 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___)))
(step t63.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t63.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))))
(step t63 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))))) :rule bind)
(step t64 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule all_simplify)
(anchor :step t65 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (BOUND_VARIABLE_5123 Idv) (:= BOUND_VARIABLE_5123 BOUND_VARIABLE_5123) (BOUND_VARIABLE_5121 Idv) (:= BOUND_VARIABLE_5121 BOUND_VARIABLE_5121)))
(step t65.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t65.t2 (cl (= BOUND_VARIABLE_5123 BOUND_VARIABLE_5123)) :rule refl)
(step t65.t3 (cl (= BOUND_VARIABLE_5121 BOUND_VARIABLE_5121)) :rule refl)
(step t65.t4 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (rare-list (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))) rare-list))
(step t65 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule bind)
(step t66 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule trans :premises (t64 t65))
(step t67 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5104 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5104 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5104 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule trans :premises (t63 t66))
(step t68 (cl (= (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule trans :premises (t62 t67))
(step t69 (cl (= (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule cong :premises (t11 t68))
(step t70 (cl (= (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))))) :rule cong :premises (t61 t69))
(step t71 (cl (= (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))))) (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))))) :rule cong :premises (t3 t70))
(step t72 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule refl)
(step t73 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule refl)
(step t74 (cl (= (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule cong :premises (t34 t73))
(step t75 (cl (= (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))))) :rule cong :premises (t72 t74))
(step t76 (cl (= (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))))) :rule cong :premises (t32 t75))
(step t77 (cl (= (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (=> true (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule cong :premises (t39 t73))
(step t78 (cl (= (=> true (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule rare_rewrite :args ("bool-impl-true2" (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))
(step t79 (cl (= (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule trans :premises (t77 t78))
(step t80 (cl (= (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule cong :premises (t72 t79))
(step t81 (cl (= (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) (=> true (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))))) :rule cong :premises (t39 t80))
(step t82 (cl (= (=> true (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule rare_rewrite :args ("bool-impl-true2" (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))))
(step t83 (cl (= (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule trans :premises (t81 t82))
(step t84 (cl (= (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule trans :premises (t76 t83))
(step t85 (cl (= (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv)) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___)))))) (=> (= (smt__ACTION___Return___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c1___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___c2___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (forall ((smt__CONSTANT___r___ Idv)) (=> (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___) (=> (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___))))))))))) (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))))) :rule trans :premises (t71 t84))
(step t86 (cl (=> (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))))) :rule resolution :premises (t54 t85 a11))
(step t87 (cl (not (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) :rule implies :premises (t86))
(step t88 (cl (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121)))))) (not (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule reordering :premises (t87))
(anchor :step t89 :args ((smt__CONSTANT___c1___ Idv) (:= smt__CONSTANT___c1___ smt__CONSTANT___c1___) (smt__CONSTANT___c2___ Idv) (:= smt__CONSTANT___c2___ smt__CONSTANT___c2___) (BOUND_VARIABLE_5161 Idv) (:= BOUND_VARIABLE_5078 BOUND_VARIABLE_5161)))
(step t89.t1 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t89.t2 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t89.t3 (cl (= BOUND_VARIABLE_5078 BOUND_VARIABLE_5161)) :rule refl)
(step t89.t4 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule refl)
(step t89 (cl (= (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule bind)
(step t90 (cl (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (not (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))))) :rule equiv2 :premises (t89))
(step t91 (cl (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5161 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5161 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5161 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule not_implies1 :premises (t49))
(step t92 (cl (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5078 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5078 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5078 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule resolution :premises (t90 t91))
(step t93 (cl (forall ((smt__CONSTANT___c1___ Idv) (BOUND_VARIABLE_5123 Idv) (BOUND_VARIABLE_5121 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5121 smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ BOUND_VARIABLE_5121) (not (smt__TLA______Mem BOUND_VARIABLE_5123 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5123 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime BOUND_VARIABLE_5121))))))) :rule resolution :premises (t88 t92))
(step t94 (cl (forall ((smt__CONSTANT___c1___ Idv) (smt__CONSTANT___c2___ Idv) (BOUND_VARIABLE_5190 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___c2___) (not (smt__TLA______Mem BOUND_VARIABLE_5190 smt__CONSTANT___Resource___)) (not (smt__TLA______Mem BOUND_VARIABLE_5190 (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))))) :rule resolution :premises (t53 t93))
(step t95 (cl) :rule resolution :premises (t50 t94))

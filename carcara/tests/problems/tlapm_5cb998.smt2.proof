(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___))
(assume a5 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a6 (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)))
(assume a7 (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv)))
(assume a8 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a9 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a10 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a11 (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))
(step t1 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule implies_neg1)
(anchor :step t2)
(assume t2.a0 (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))
(step t2.t1 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_5055 smt__CONSTANT___S___)))
(step t2.t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t2.t1))
(step t2.t3 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule equiv_pos2)
(anchor :step t2.t4 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t2.t4.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t2.t4.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t2.t4.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t2.t4.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t2.t4.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t2.t4.t3.t3 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule rare_rewrite :args ("eq-symm" smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv))
(step t2.t4.t3.t4 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv))
(step t2.t4.t3.t5 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t2.t4.t3.t3 t2.t4.t3.t4))
(step t2.t4.t3.t6 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t2.t4.t3.t7 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t2.t4.t3.t5 t2.t4.t3.t6))
(step t2.t4.t3.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t2.t4.t3.t2 t2.t4.t3.t7))
(step t2.t4.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t2.t4.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t2.t4.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t2.t4.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t2.t4.t4 t2.t4.t5))
(step t2.t4.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t2.t4.t3 t2.t4.t6))
(step t2.t4.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t2.t4.t2 t2.t4.t7))
(step t2.t4 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(anchor :step t2.t5 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t2.t5.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t2.t5.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))
(step t2.t5.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))) rare-list))
(step t2.t5.t4 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t2.t5.t2 t2.t5.t3))
(step t2.t5 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule bind)
(step t2.t6 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t2.t7 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)))) :rule refl)
(step t2.t8 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t2.t9 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule all_simplify)
(anchor :step t2.t10 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5055 Idv) (:= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)))
(step t2.t10.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t2.t10.t2 (cl (= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)) :rule refl)
(step t2.t10.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (rare-list (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) rare-list))
(step t2.t10 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule bind)
(step t2.t11 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule trans :premises (t2.t9 t2.t10))
(step t2.t12 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t2.t7 t2.t8 t2.t11))
(step t2.t13 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t6 t2.t12))
(step t2.t14 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t5 t2.t13))
(step t2.t15 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t4 t2.t14))
(step t2.t16 (cl (= smt__ACTION___Next___ smt__TLA______Tt___Idv)) :rule and :premises (a7))
(step t2.t17 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule symm :premises (t2.t16))
(step t2.t18 (cl (not (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) (not (= smt__TLA______Tt___Idv smt__ACTION___Next___)) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule equiv_pos2)
(step t2.t19 (cl (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv)) :rule and :premises (a7))
(step t2.t20 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule symm :premises (t2.t19))
(step t2.t21 (cl (= smt__ACTION___Next___ smt__ACTION___Next___)) :rule refl)
(step t2.t22 (cl (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) :rule cong :premises (t2.t20 t2.t21))
(step t2.t23 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule resolution :premises (t2.t18 t2.t22 t2.t17))
(step t2.t24 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__ACTION___Next___ smt__ACTION___Next___))) :rule cong :premises (t2.t17 t2.t23))
(step t2.t25 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__ACTION___Next___ smt__ACTION___Next___)))) :rule cong :premises (t2.t24))
(step t2.t26 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t2.t27 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t2.t26 t2.t17))
(anchor :step t2.t28 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5055 Idv) (:= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)))
(step t2.t28.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t2.t28.t2 (cl (= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)) :rule refl)
(step t2.t28.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t2.t28.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t2.t28.t5 (cl (= (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055) (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))) :rule refl)
(step t2.t28.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) :rule cong :premises (t2.t17 t2.t28.t5))
(step t2.t28.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) :rule cong :premises (t2.t28.t6))
(step t2.t28.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule cong :premises (t2.t28.t3 t2.t28.t4 t2.t28.t7))
(step t2.t28 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule bind)
(step t2.t29 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t2.t25 t2.t27 t2.t28))
(step t2.t30 (cl (= (= smt__ACTION___Next___ smt__ACTION___Next___) true)) :rule rare_rewrite :args ("eq-refl" smt__ACTION___Next___))
(step t2.t31 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (not true))) :rule cong :premises (t2.t30))
(step t2.t32 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t2.t33 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) false)) :rule trans :premises (t2.t31 t2.t32))
(step t2.t34 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule refl)
(step t2.t35 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule refl)
(step t2.t36 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t2.t33 t2.t34 t2.t35))
(step t2.t37 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule rare_rewrite :args ("bool-or-false" rare-list (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))))
(step t2.t38 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t36 t2.t37))
(step t2.t39 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t29 t2.t38))
(step t2.t40 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t2.t15 t2.t39))
(step t2.t41 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule resolution :premises (t2.t3 t2.t40 a10))
(step t2.t42 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule or :premises (t2.t41))
(step t2.t43 (cl (not (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) (not (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule equiv_pos2)
(step t2.t44 (cl (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) :rule cong :premises (t2.t27))
(step t2.t45 (cl (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule resolution :premises (t2.t43 t2.t44 a11))
(step t2.t46 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule resolution :premises (t2.t42 t2.t45))
(step t2.t47 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t2.t2 t2.t46))
(step t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule subproof :discharge (t2.a0))
(step t3 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t1 t2))
(step t4 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule implies_neg2)
(step t5 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t3 t4))
(step t6 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule contraction :premises (t5))
(step t7 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule implies :premises (t6))
(step t8 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t9 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t8))
(step t10 (cl (not (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t11 (cl (= (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))
(step t12 (cl (= (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))
(step t13 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))
(step t14 (cl (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule cong :premises (t11 t12 t13))
(step t15 (cl (= smt__ACTION___Next___ smt__TLA______Tt___Idv)) :rule and :premises (a7))
(step t16 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule symm :premises (t15))
(step t17 (cl (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t18 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t16 t17))
(step t19 (cl (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t20 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t16 t19))
(step t21 (cl (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t22 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t16 t21))
(step t23 (cl (= (or (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule cong :premises (t18 t20 t22))
(step t24 (cl (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule trans :premises (t14 t23))
(step t25 (cl (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t10 t24 a6))
(step t26 (cl (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule or :premises (t25))
(step t27 (cl (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule reordering :premises (t26))
(step t28 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t29 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t28))
(step t30 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_5017 smt__CONSTANT___S___)))
(step t31 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t30))
(step t32 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule equiv_pos2)
(anchor :step t33 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t33.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t33.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t33.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t33.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t33.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t33.t3.t3 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule rare_rewrite :args ("eq-symm" smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv))
(step t33.t3.t4 (cl (= (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv))
(step t33.t3.t5 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t33.t3.t3 t33.t3.t4))
(step t33.t3.t6 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t33.t3.t7 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t33.t3.t5 t33.t3.t6))
(step t33.t3.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t33.t3.t2 t33.t3.t7))
(step t33.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t33.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t33.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t33.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t33.t4 t33.t5))
(step t33.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t33.t3 t33.t6))
(step t33.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t33.t2 t33.t7))
(step t33 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(anchor :step t34 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t34.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t34.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))
(step t34.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))) rare-list))
(step t34.t4 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t34.t2 t34.t3))
(step t34 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule bind)
(step t35 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t36 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)))) :rule refl)
(step t37 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t38 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule all_simplify)
(anchor :step t39 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5017 Idv) (:= BOUND_VARIABLE_5017 BOUND_VARIABLE_5017)))
(step t39.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t39.t2 (cl (= BOUND_VARIABLE_5017 BOUND_VARIABLE_5017)) :rule refl)
(step t39.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (rare-list (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))) rare-list))
(step t39 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule bind)
(step t40 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule trans :premises (t38 t39))
(step t41 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule cong :premises (t36 t37 t40))
(step t42 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t35 t41))
(step t43 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t34 t42))
(step t44 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t33 t43))
(step t45 (cl (not (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) (not (= smt__TLA______Tt___Idv smt__ACTION___Next___)) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule equiv_pos2)
(step t46 (cl (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv)) :rule and :premises (a7))
(step t47 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule symm :premises (t46))
(step t48 (cl (= smt__ACTION___Next___ smt__ACTION___Next___)) :rule refl)
(step t49 (cl (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) :rule cong :premises (t47 t48))
(step t50 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule resolution :premises (t45 t49 t16))
(step t51 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__ACTION___Next___ smt__ACTION___Next___))) :rule cong :premises (t16 t50))
(step t52 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__ACTION___Next___ smt__ACTION___Next___)))) :rule cong :premises (t51))
(step t53 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t54 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t53 t16))
(anchor :step t55 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5017 Idv) (:= BOUND_VARIABLE_5017 BOUND_VARIABLE_5017)))
(step t55.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t55.t2 (cl (= BOUND_VARIABLE_5017 BOUND_VARIABLE_5017)) :rule refl)
(step t55.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t55.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t55.t5 (cl (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017) (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))) :rule refl)
(step t55.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))) :rule cong :premises (t16 t55.t5))
(step t55.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))) :rule cong :premises (t55.t6))
(step t55.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) :rule cong :premises (t55.t3 t55.t4 t55.t7))
(step t55 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule bind)
(step t56 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule cong :premises (t52 t54 t55))
(step t57 (cl (= (= smt__ACTION___Next___ smt__ACTION___Next___) true)) :rule rare_rewrite :args ("eq-refl" smt__ACTION___Next___))
(step t58 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (not true))) :rule cong :premises (t57))
(step t59 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t60 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) false)) :rule trans :premises (t58 t59))
(step t61 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule refl)
(step t62 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule refl)
(step t63 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule cong :premises (t60 t61 t62))
(step t64 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule rare_rewrite :args ("bool-or-false" rare-list (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))))
(step t65 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t63 t64))
(step t66 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t56 t65))
(step t67 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))))) :rule trans :premises (t44 t66))
(step t68 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017))))))) :rule resolution :premises (t32 t67 a9))
(step t69 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) :rule or :premises (t68))
(step t70 (cl (not (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) (not (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule equiv_pos2)
(step t71 (cl (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) :rule cong :premises (t54))
(step t72 (cl (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule resolution :premises (t70 t71 a11))
(step t73 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5017 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5017 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_5017)))))) :rule resolution :premises (t69 t72))
(step t74 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t31 t73))
(step t75 (cl (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t29 a4 a5 t74))
(step t76 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t77 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t76))
(step t78 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_4979 smt__CONSTANT___S___)))
(step t79 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t78))
(step t80 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule equiv_pos2)
(anchor :step t81 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t81.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t81.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t81.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t81.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t81.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t81.t3.t3 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule rare_rewrite :args ("eq-symm" smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv))
(step t81.t3.t4 (cl (= (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv))
(step t81.t3.t5 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t81.t3.t3 t81.t3.t4))
(step t81.t3.t6 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t81.t3.t5 t37))
(step t81.t3.t7 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t81.t3.t2 t81.t3.t6))
(step t81.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t81.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t81.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t81.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t81.t4 t81.t5))
(step t81.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t81.t3 t81.t6))
(step t81.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t81.t2 t81.t7))
(step t81 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(anchor :step t82 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t82.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t82.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))
(step t82.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))) rare-list))
(step t82.t4 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t82.t2 t82.t3))
(step t82 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule bind)
(step t83 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t84 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule all_simplify)
(anchor :step t85 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_4979 Idv) (:= BOUND_VARIABLE_4979 BOUND_VARIABLE_4979)))
(step t85.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t85.t2 (cl (= BOUND_VARIABLE_4979 BOUND_VARIABLE_4979)) :rule refl)
(step t85.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (rare-list (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))) rare-list))
(step t85 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule bind)
(step t86 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule trans :premises (t84 t85))
(step t87 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule cong :premises (t36 t37 t86))
(step t88 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t83 t87))
(step t89 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t82 t88))
(step t90 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t81 t89))
(anchor :step t91 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_4979 Idv) (:= BOUND_VARIABLE_4979 BOUND_VARIABLE_4979)))
(step t91.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t91.t2 (cl (= BOUND_VARIABLE_4979 BOUND_VARIABLE_4979)) :rule refl)
(step t91.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t91.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t91.t5 (cl (= (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979) (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))) :rule refl)
(step t91.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))) :rule cong :premises (t16 t91.t5))
(step t91.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))) :rule cong :premises (t91.t6))
(step t91.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) :rule cong :premises (t91.t3 t91.t4 t91.t7))
(step t91 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule bind)
(step t92 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule cong :premises (t52 t54 t91))
(step t93 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule refl)
(step t94 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule cong :premises (t60 t61 t93))
(step t95 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule rare_rewrite :args ("bool-or-false" rare-list (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))))
(step t96 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t94 t95))
(step t97 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t92 t96))
(step t98 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))))) :rule trans :premises (t90 t97))
(step t99 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979))))))) :rule resolution :premises (t80 t98 a8))
(step t100 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) :rule or :premises (t99))
(step t101 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_4979 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_4979 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_4979)))))) :rule resolution :premises (t100 t72))
(step t102 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t79 t101))
(step t103 (cl (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t77 a4 a5 t102))
(step t104 (cl (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule resolution :premises (t27 t75 t103))
(step t105 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t9 a4 a5 t104))
(step t106 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule equiv_pos2)
(anchor :step t107 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t107.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t107.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t107.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t107.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t107.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t107.t3.t3 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule rare_rewrite :args ("eq-symm" smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv))
(step t107.t3.t4 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule rare_rewrite :args ("eq-symm" (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv))
(step t107.t3.t5 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t107.t3.t3 t107.t3.t4))
(step t107.t3.t6 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t107.t3.t5 t37))
(step t107.t3.t7 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t107.t3.t2 t107.t3.t6))
(step t107.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t107.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t107.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t107.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t107.t4 t107.t5))
(step t107.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t107.t3 t107.t6))
(step t107.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t107.t2 t107.t7))
(step t107 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(anchor :step t108 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t108.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t108.t2 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))
(step t108.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))) rare-list))
(step t108.t4 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t108.t2 t108.t3))
(step t108 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule bind)
(step t109 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t110 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule all_simplify)
(anchor :step t111 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5055 Idv) (:= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)))
(step t111.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t111.t2 (cl (= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)) :rule refl)
(step t111.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule rare_rewrite :args ("bool-or-flatten" (rare-list (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (rare-list (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) rare-list))
(step t111 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule bind)
(step t112 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule trans :premises (t110 t111))
(step t113 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t36 t37 t112))
(step t114 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t109 t113))
(step t115 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t108 t114))
(step t116 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t107 t115))
(anchor :step t117 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_5055 Idv) (:= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)))
(step t117.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t117.t2 (cl (= BOUND_VARIABLE_5055 BOUND_VARIABLE_5055)) :rule refl)
(step t117.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t117.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t117.t5 (cl (= (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055) (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))) :rule refl)
(step t117.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) :rule cong :premises (t16 t117.t5))
(step t117.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) :rule cong :premises (t117.t6))
(step t117.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule cong :premises (t117.t3 t117.t4 t117.t7))
(step t117 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule bind)
(step t118 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t52 t54 t117))
(step t119 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule refl)
(step t120 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule cong :premises (t60 t61 t119))
(step t121 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule rare_rewrite :args ("bool-or-false" rare-list (rare-list (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))))
(step t122 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t120 t121))
(step t123 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t118 t122))
(step t124 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))))) :rule trans :premises (t116 t123))
(step t125 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055))))))) :rule resolution :premises (t106 t124 a10))
(step t126 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule or :premises (t125))
(step t127 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_5055 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_5055 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_5055)))))) :rule resolution :premises (t126 t72))
(step t128 (cl) :rule resolution :premises (t7 t105 t127))
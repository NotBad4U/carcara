(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___))
(assume a5 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a6 (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)))
(assume a7 (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv)))
(assume a8 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a9 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a10 (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))))
(assume a11 (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))
(step t1 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) :rule implies_neg1)
(anchor :step t2)
(assume t2.a0 (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))
(step t2.t1 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_821 smt__CONSTANT___S___)))
(step t2.t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t2.t1))
(step t2.t3 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t2.t2 t2.a0))
(step t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule subproof :discharge (t2.a0))
(step t3 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t1 t2))
(step t4 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule implies_neg2)
(step t5 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t3 t4))
(step t6 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule contraction :premises (t5))
(step t7 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule implies :premises (t6))
(step t8 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t9 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t8))
(step t10 (cl (not (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv))) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t11 (cl (= (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule all_simplify)
(step t12 (cl (= (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule all_simplify)
(step t13 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule all_simplify)
(step t14 (cl (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule cong :premises (t11 t12 t13))
(step t15 (cl (and (= smt__STATE___TypeInvariant___ smt__ACTION___Next___) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule and_neg)
(step t16 (cl (not (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) (not (= smt__TLA______Tt___Idv smt__ACTION___Next___)) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule equiv_pos2)
(step t17 (cl (not (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___)))) (not (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv))) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___))) :rule equiv_pos2)
(step t18 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule all_simplify)
(step t19 (cl (= (= smt__ACTION___Next___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__ACTION___Next___))) :rule all_simplify)
(step t20 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___)))) :rule cong :premises (t18 t19))
(step t21 (cl (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___))) :rule resolution :premises (t17 t20 a7))
(step t22 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t21))
(step t23 (cl (= smt__ACTION___Next___ smt__ACTION___Next___)) :rule refl)
(step t24 (cl (= (= smt__TLA______Tt___Idv smt__ACTION___Next___) (= smt__STATE___TypeInvariant___ smt__ACTION___Next___))) :rule cong :premises (t22 t23))
(step t25 (cl (not (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___)))) (not (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__ACTION___Next___ smt__TLA______Tt___Idv))) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___))) :rule equiv_pos2)
(step t26 (cl (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__ACTION___Next___))) :rule resolution :premises (t25 t20 a7))
(step t27 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule and :premises (t26))
(step t28 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule resolution :premises (t16 t24 t27))
(step t29 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t21))
(step t30 (cl (and (= smt__STATE___TypeInvariant___ smt__ACTION___Next___) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule resolution :premises (t15 t28 t29))
(step t31 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t30))
(step t32 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule and :premises (t30))
(step t33 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule trans :premises (t31 t32))
(step t34 (cl (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t35 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t33 t34))
(step t36 (cl (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t37 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t33 t36))
(step t38 (cl (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule refl)
(step t39 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule cong :premises (t33 t38))
(step t40 (cl (= (or (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule cong :premises (t35 t37 t39))
(step t41 (cl (= (or (= (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule trans :premises (t14 t40))
(step t42 (cl (or (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t10 t41 a6))
(step t43 (cl (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule or :premises (t42))
(step t44 (cl (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule reordering :premises (t43))
(step t45 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t46 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t45))
(step t47 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) :rule implies_neg1)
(anchor :step t48)
(assume t48.a0 (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))
(step t48.t1 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_783 smt__CONSTANT___S___)))
(step t48.t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t48.t1))
(step t48.t3 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t48.t2 t48.a0))
(step t48 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule subproof :discharge (t48.a0))
(step t49 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t47 t48))
(step t50 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule implies_neg2)
(step t51 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t49 t50))
(step t52 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule contraction :premises (t51))
(step t53 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule implies :premises (t52))
(step t54 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule equiv_pos2)
(anchor :step t55 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t55.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t55.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t55.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t55.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t55.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t55.t3.t3 (cl (= (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule all_simplify)
(step t55.t3.t4 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t18 t55.t3.t3))
(step t55.t3.t5 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t55.t3.t6 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t55.t3.t4 t55.t3.t5))
(step t55.t3.t7 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t55.t3.t2 t55.t3.t6))
(step t55.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t55.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t55.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t55.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t55.t4 t55.t5))
(step t55.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t55.t3 t55.t6))
(step t55.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t55.t2 t55.t7))
(step t55 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(step t56 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule all_simplify)
(step t57 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t58 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)))) :rule refl)
(step t59 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) :rule refl)
(step t60 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule all_simplify)
(anchor :step t61 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_783 Idv) (:= BOUND_VARIABLE_783 BOUND_VARIABLE_783)))
(step t61.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t61.t2 (cl (= BOUND_VARIABLE_783 BOUND_VARIABLE_783)) :rule refl)
(step t61.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) :rule all_simplify)
(step t61 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule bind)
(step t62 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule trans :premises (t60 t61))
(step t63 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule cong :premises (t58 t59 t62))
(step t64 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t57 t63))
(step t65 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t56 t64))
(step t66 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t55 t65))
(step t67 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t30))
(step t68 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule and :premises (t30))
(step t69 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule trans :premises (t67 t68))
(step t70 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__ACTION___Next___ smt__ACTION___Next___))) :rule cong :premises (t69 t68))
(step t71 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__ACTION___Next___ smt__ACTION___Next___)))) :rule cong :premises (t70))
(step t72 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t73 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t72 t69))
(anchor :step t74 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_783 Idv) (:= BOUND_VARIABLE_783 BOUND_VARIABLE_783)))
(step t74.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t74.t2 (cl (= BOUND_VARIABLE_783 BOUND_VARIABLE_783)) :rule refl)
(step t74.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t74.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t74.t5 (cl (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783) (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))) :rule refl)
(step t74.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)) (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))) :rule cong :premises (t69 t74.t5))
(step t74.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) :rule cong :premises (t74.t6))
(step t74.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) :rule cong :premises (t74.t3 t74.t4 t74.t7))
(step t74 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule bind)
(step t75 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule cong :premises (t71 t73 t74))
(step t76 (cl (= (= smt__ACTION___Next___ smt__ACTION___Next___) true)) :rule all_simplify)
(step t77 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (not true))) :rule cong :premises (t76))
(step t78 (cl (= (not true) false)) :rule all_simplify)
(step t79 (cl (= (not (= smt__ACTION___Next___ smt__ACTION___Next___)) false)) :rule trans :premises (t77 t78))
(step t80 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule refl)
(step t81 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule refl)
(step t82 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule cong :premises (t79 t80 t81))
(step t83 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule all_simplify)
(step t84 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t82 t83))
(step t85 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t75 t84))
(step t86 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Allocate___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))))) :rule trans :premises (t66 t85))
(step t87 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783))))))) :rule resolution :premises (t54 t86 a9))
(step t88 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) :rule or :premises (t87))
(step t89 (cl (not (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) (not (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule equiv_pos2)
(step t90 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t91 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t30))
(step t92 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule and :premises (t30))
(step t93 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule trans :premises (t91 t92))
(step t94 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t90 t93))
(step t95 (cl (= (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___)))) :rule cong :premises (t94))
(step t96 (cl (not (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule resolution :premises (t89 t95 a11))
(step t97 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_783 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_783 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c____1 BOUND_VARIABLE_783)))))) :rule resolution :premises (t88 t96))
(step t98 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t53 t97))
(step t99 (cl (not (= smt__ACTION___Next___ (smt__ACTION___Allocate___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t46 a4 a5 t98))
(step t100 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule or_pos)
(step t101 (cl (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule reordering :premises (t100))
(step t102 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) :rule implies_neg1)
(anchor :step t103)
(assume t103.a0 (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))
(step t103.t1 (cl (or (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__CONSTANT___c____1 smt__CONSTANT___c___) (:= BOUND_VARIABLE_745 smt__CONSTANT___S___)))
(step t103.t2 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule or :premises (t103.t1))
(step t103.t3 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t103.t2 t103.a0))
(step t103 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule subproof :discharge (t103.a0))
(step t104 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t102 t103))
(step t105 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule implies_neg2)
(step t106 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t104 t105))
(step t107 (cl (=> (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule contraction :premises (t106))
(step t108 (cl (not (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule implies :premises (t107))
(step t109 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule equiv_pos2)
(anchor :step t110 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t110.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t110.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t110.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t110.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t110.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t110.t3.t3 (cl (= (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule all_simplify)
(step t110.t3.t4 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t18 t110.t3.t3))
(step t110.t3.t5 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t110.t3.t4 t59))
(step t110.t3.t6 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t110.t3.t2 t110.t3.t5))
(step t110.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t110.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t110.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t110.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t110.t4 t110.t5))
(step t110.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t110.t3 t110.t6))
(step t110.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t110.t2 t110.t7))
(step t110 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(step t111 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule all_simplify)
(step t112 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t113 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule all_simplify)
(anchor :step t114 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_745 Idv) (:= BOUND_VARIABLE_745 BOUND_VARIABLE_745)))
(step t114.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t114.t2 (cl (= BOUND_VARIABLE_745 BOUND_VARIABLE_745)) :rule refl)
(step t114.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) :rule all_simplify)
(step t114 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule bind)
(step t115 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule trans :premises (t113 t114))
(step t116 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule cong :premises (t58 t59 t115))
(step t117 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t112 t116))
(step t118 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t111 t117))
(step t119 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t110 t118))
(step t120 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t30))
(step t121 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule and :premises (t30))
(step t122 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule trans :premises (t120 t121))
(step t123 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__ACTION___Next___ smt__ACTION___Next___))) :rule cong :premises (t122 t121))
(step t124 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__ACTION___Next___ smt__ACTION___Next___)))) :rule cong :premises (t123))
(step t125 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t126 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t125 t122))
(anchor :step t127 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_745 Idv) (:= BOUND_VARIABLE_745 BOUND_VARIABLE_745)))
(step t127.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t127.t2 (cl (= BOUND_VARIABLE_745 BOUND_VARIABLE_745)) :rule refl)
(step t127.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t127.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t127.t5 (cl (= (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745) (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))) :rule refl)
(step t127.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)) (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))) :rule cong :premises (t122 t127.t5))
(step t127.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) :rule cong :premises (t127.t6))
(step t127.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) :rule cong :premises (t127.t3 t127.t4 t127.t7))
(step t127 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule bind)
(step t128 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule cong :premises (t124 t126 t127))
(step t129 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule refl)
(step t130 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule cong :premises (t79 t80 t129))
(step t131 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule all_simplify)
(step t132 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t130 t131))
(step t133 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t128 t132))
(step t134 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Request___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))))) :rule trans :premises (t119 t133))
(step t135 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745))))))) :rule resolution :premises (t109 t134 a8))
(step t136 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) :rule or :premises (t135))
(step t137 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_745 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_745 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c____1 BOUND_VARIABLE_745)))))) :rule resolution :premises (t136 t96))
(step t138 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___))))) :rule resolution :premises (t108 t137))
(step t139 (cl (not (= smt__ACTION___Next___ (smt__ACTION___Request___ smt__CONSTANT___c___ smt__CONSTANT___S___)))) :rule resolution :premises (t101 a4 a5 t138))
(step t140 (cl (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___))) :rule resolution :premises (t44 t99 t139))
(step t141 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c___ smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c___ smt__CONSTANT___S___)))))) :rule resolution :premises (t9 a4 a5 t140))
(step t142 (cl (not (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) (not (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule equiv_pos2)
(anchor :step t143 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1)))
(step t143.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t143.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___))) :rule refl)
(anchor :step t143.t3 :args ((smt__CONSTANT___S____1 Idv) (:= smt__CONSTANT___S____1 smt__CONSTANT___S____1)))
(step t143.t3.t1 (cl (= smt__CONSTANT___S____1 smt__CONSTANT___S____1)) :rule refl)
(step t143.t3.t2 (cl (= (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule refl)
(step t143.t3.t3 (cl (= (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))) :rule all_simplify)
(step t143.t3.t4 (cl (= (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))) :rule cong :premises (t18 t143.t3.t3))
(step t143.t3.t5 (cl (= (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) :rule cong :premises (t143.t3.t4 t59))
(step t143.t3.t6 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule cong :premises (t143.t3.t2 t143.t3.t5))
(step t143.t3 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) :rule bind)
(step t143.t4 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) :rule all_simplify)
(step t143.t5 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule all_simplify)
(step t143.t6 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t143.t4 t143.t5))
(step t143.t7 (cl (= (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) :rule trans :premises (t143.t3 t143.t6))
(step t143.t8 (cl (= (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv))))) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule cong :premises (t143.t2 t143.t7))
(step t143 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule bind)
(step t144 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))))) :rule all_simplify)
(step t145 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))))) :rule all_simplify)
(step t146 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule all_simplify)
(anchor :step t147 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_821 Idv) (:= BOUND_VARIABLE_821 BOUND_VARIABLE_821)))
(step t147.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t147.t2 (cl (= BOUND_VARIABLE_821 BOUND_VARIABLE_821)) :rule refl)
(step t147.t3 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) :rule all_simplify)
(step t147 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (or (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule bind)
(step t148 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule trans :premises (t146 t147))
(step t149 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule cong :premises (t58 t59 t148))
(step t150 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t145 t149))
(step t151 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___S____1 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1)))))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t144 t150))
(step t152 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t143 t151))
(step t153 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t30))
(step t154 (cl (= smt__STATE___TypeInvariant___ smt__ACTION___Next___)) :rule and :premises (t30))
(step t155 (cl (= smt__TLA______Tt___Idv smt__ACTION___Next___)) :rule trans :premises (t153 t154))
(step t156 (cl (= (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__ACTION___Next___ smt__ACTION___Next___))) :rule cong :premises (t155 t154))
(step t157 (cl (= (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (not (= smt__ACTION___Next___ smt__ACTION___Next___)))) :rule cong :premises (t156))
(step t158 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Anon___OPAQUE___h12c0a)) :rule refl)
(step t159 (cl (= (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___))) :rule cong :premises (t158 t155))
(anchor :step t160 :args ((smt__CONSTANT___c____1 Idv) (:= smt__CONSTANT___c____1 smt__CONSTANT___c____1) (BOUND_VARIABLE_821 Idv) (:= BOUND_VARIABLE_821 BOUND_VARIABLE_821)))
(step t160.t1 (cl (= smt__CONSTANT___c____1 smt__CONSTANT___c____1)) :rule refl)
(step t160.t2 (cl (= BOUND_VARIABLE_821 BOUND_VARIABLE_821)) :rule refl)
(step t160.t3 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)))) :rule refl)
(step t160.t4 (cl (= (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t160.t5 (cl (= (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821) (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))) :rule refl)
(step t160.t6 (cl (= (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)) (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))) :rule cong :premises (t155 t160.t5))
(step t160.t7 (cl (= (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) :rule cong :premises (t160.t6))
(step t160.t8 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) :rule cong :premises (t160.t3 t160.t4 t160.t7))
(step t160 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule bind)
(step t161 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule cong :premises (t157 t159 t160))
(step t162 (cl (= (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule refl)
(step t163 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule cong :premises (t79 t80 t162))
(step t164 (cl (= (or false (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule all_simplify)
(step t165 (cl (= (or (not (= smt__ACTION___Next___ smt__ACTION___Next___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t163 t164))
(step t166 (cl (= (or (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t161 t165))
(step t167 (cl (= (forall ((smt__CONSTANT___c____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___) (forall ((smt__CONSTANT___S____1 Idv)) (=> (smt__TLA______Mem smt__CONSTANT___S____1 (smt__TLA______Subset smt__CONSTANT___Resource___)) (=> (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= (smt__ACTION___Return___ smt__CONSTANT___c____1 smt__CONSTANT___S____1) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h12c0a smt__TLA______Tt___Idv)))))) (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))))) :rule trans :premises (t152 t166))
(step t168 (cl (or (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821))))))) :rule resolution :premises (t142 t167 a10))
(step t169 (cl (= smt__TLA______Anon___OPAQUE___h12c0a smt__ACTION___Next___) (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) :rule or :premises (t168))
(step t170 (cl (forall ((smt__CONSTANT___c____1 Idv) (BOUND_VARIABLE_821 Idv)) (or (not (smt__TLA______Mem smt__CONSTANT___c____1 smt__CONSTANT___Client___)) (not (smt__TLA______Mem BOUND_VARIABLE_821 (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (= smt__ACTION___Next___ (smt__ACTION___Return___ smt__CONSTANT___c____1 BOUND_VARIABLE_821)))))) :rule resolution :premises (t169 t96))
(step t171 (cl) :rule resolution :premises (t7 t141 t170))


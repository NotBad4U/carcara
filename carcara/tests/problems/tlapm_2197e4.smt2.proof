(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))
(assume a5 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a6 (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))))
(assume a7 (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))
(step t1 (cl (not (= (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))))) (not (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) :rule equiv_pos2)
(step t2 (cl (= (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___))) :rule all_simplify)
(step t3 (cl (= (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___Mutex___))) :rule all_simplify)
(step t4 (cl (= (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)))) :rule all_simplify)
(step t5 (cl (= (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) :rule refl)
(step t6 (cl (= (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule cong :premises (t4 t5))
(step t7 (cl (= (=> (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) :rule cong :premises (t3 t6))
(step t8 (cl (= (=> (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (=> (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (=> (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))))) :rule cong :premises (t2 t7))
(step t9 (cl (=> (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) :rule resolution :premises (t1 t8 a6))
(step t10 (cl (not (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule implies :premises (t9))
(step t11 (cl (not (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) (not (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule equiv_pos2)
(step t12 (cl (= (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (and (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)))) :rule all_simplify)
(step t13 (cl (= (and (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv) (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)))) :rule cong :premises (t4 t2 t3))
(step t14 (cl (= (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)))) :rule trans :premises (t12 t13))
(step t15 (cl (= (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)) (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule cong :premises (t14 t5))
(step t16 (cl (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) :rule cong :premises (t15))
(step t17 (cl (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule resolution :premises (t11 t16 a7))
(step t18 (cl (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___))) :rule not_implies1 :premises (t17))
(step t19 (cl (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___)) :rule and :premises (t18))
(step t20 (cl (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule resolution :premises (t10 t19))
(step t21 (cl (not (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) (not (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) :rule implies_pos)
(step t22 (cl (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___))) :rule not_implies1 :premises (t17))
(step t23 (cl (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) :rule and :premises (t22))
(step t24 (cl (not (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) (not (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)) :rule implies_pos)
(step t25 (cl (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___))) :rule not_implies1 :premises (t17))
(step t26 (cl (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___))) :rule and :premises (t25))
(step t27 (cl (not (= (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) (not (not (=> (and (and (= smt__STATE___TypeInvariant___ smt__TLA______Tt___Idv) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv)) (= (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___) smt__TLA______Tt___Idv)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule equiv_pos2)
(step t28 (cl (not (=> (and (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Tt___Idv smt__STATE___TypeInvariant___) (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule resolution :premises (t27 t16 a7))
(step t29 (cl (not (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))) :rule not_implies2 :premises (t28))
(step t30 (cl (not (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv)))) :rule resolution :premises (t24 t26 t29))
(step t31 (cl (not (=> (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (=> (= smt__TLA______Tt___Idv (smt__ACTION___Allocate___ smt__CONSTANT___clt___ smt__CONSTANT___S___)) (= smt__TLA______Anon___OPAQUE___h93432 smt__TLA______Tt___Idv))))) :rule resolution :premises (t21 t23 t30))
(step t32 (cl) :rule resolution :premises (t20 t31))


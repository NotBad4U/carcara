(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y)))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Cup smt__a smt__b)) (or (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__x smt__b))) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Cup smt__a smt__b))) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______Cup smt__a smt__b)) :pattern ((smt__TLA______Mem smt__x smt__b) (smt__TLA______Cup smt__a smt__b)))))
(assume a5 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__x smt__b))) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b))) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______Cap smt__a smt__b)) :pattern ((smt__TLA______Mem smt__x smt__b) (smt__TLA______Cap smt__a smt__b)))))
(assume a6 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______SetMinus smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (not (smt__TLA______Mem smt__x smt__b)))) :pattern ((smt__TLA______Mem smt__x (smt__TLA______SetMinus smt__a smt__b))) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______SetMinus smt__a smt__b)) :pattern ((smt__TLA______Mem smt__x smt__b) (smt__TLA______SetMinus smt__a smt__b)))))
(assume a7 (forall ((smt__f Idv) (smt__g Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g) (= (smt__TLA______FunDom smt__f) (smt__TLA______FunDom smt__g)) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp smt__f smt__x) (smt__TLA______FunApp smt__g smt__x))))) (= smt__f smt__g)) :pattern ((smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g)))))
(assume a8 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)))) (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))))))
(assume a9 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))))
(assume a10 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv) (smt__x Idv)) (! (=> (and (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______FunApp smt__f smt__x)))))
(assume a11 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (! (smt__TLA______FunIsafcn (smt__TLA______FunExcept smt__f smt__x smt__y)) :pattern ((smt__TLA______FunExcept smt__f smt__x smt__y)))))
(assume a12 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (! (= (smt__TLA______FunDom (smt__TLA______FunExcept smt__f smt__x smt__y)) (smt__TLA______FunDom smt__f)) :pattern ((smt__TLA______FunExcept smt__f smt__x smt__y)))))
(assume a13 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (! (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)) :pattern ((smt__TLA______FunExcept smt__f smt__x smt__y)))))
(assume a14 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))
(assume a15 (forall ((smt__x Idv) (smt__y Idv)) (! (smt__TLA______SetExtTrigger (smt__TLA______Cap smt__x smt__y) smt__TLA______SetEnum___0) :pattern ((smt__TLA______Cap smt__x smt__y)))))
(assume a16 (forall ((smt__x Idv)) (! (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0)) :pattern ((smt__TLA______Mem smt__x smt__TLA______SetEnum___0)))))
(assume a17 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(assume a18 (forall ((smt__x Idv) (smt__y Idv)) (! (= (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y) (= smt__x smt__y)) :pattern ((smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y)))))
(assume a19 (forall ((smt__x Idv) (smt__y Idv)) (! (smt__TLA______SetExtTrigger smt__x smt__y) :pattern ((smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y)))))
(assume a20 (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))
(assume a21 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a22 (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))
(assume a23 (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))
(assume a24 (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___))
(assume a25 (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))))
(assume a26 (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume a27 (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat______prime (smt__TLA______FunExcept smt__VARIABLE___unsat___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume a28 (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___))))
(assume a29 (not (or (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___))))
(assume a30 (not (and (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))
(step t1 (cl (not (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule not_and :premises (a30))
(step t2 (cl (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule equiv_pos1)
(step t3 (cl (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t2))
(step t4 (cl (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule and_neg)
(step t5 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule implies_neg1)
(anchor :step t6)
(assume t6.a0 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t6.a1 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))
(step t6.t1 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule implies_neg1)
(anchor :step t6.t2)
(assume t6.t2.a0 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))
(assume t6.t2.a1 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(step t6.t2.t1 (cl (= (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__VARIABLE___alloc______prime)) :rule symm :premises (t6.t2.a1))
(step t6.t2.t2 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule symm :premises (t6.t2.t1))
(step t6.t2.t3 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t6.t2.t4 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule cong :premises (t6.t2.t2 t6.t2.t3))
(step t6.t2.t5 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule symm :premises (t6.t2.a0))
(step t6.t2.t6 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule trans :premises (t6.t2.t4 t6.t2.t5))
(step t6.t2 (cl (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule subproof :discharge (t6.t2.a0 t6.t2.a1))
(step t6.t3 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule and_pos)
(step t6.t4 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t6.t5 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule resolution :premises (t6.t2 t6.t3 t6.t4))
(step t6.t6 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule reordering :premises (t6.t5))
(step t6.t7 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule contraction :premises (t6.t6))
(step t6.t8 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t6.t1 t6.t7))
(step t6.t9 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule implies_neg2)
(step t6.t10 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t6.t8 t6.t9))
(step t6.t11 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule contraction :premises (t6.t10))
(step t6.t12 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule implies :premises (t6.t11))
(step t6.t13 (cl (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule and_neg)
(step t6.t14 (cl (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t6.t13 t6.a1 t6.a0))
(step t6.t15 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t6.t12 t6.t14))
(step t6 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule subproof :discharge (t6.a0 t6.a1))
(step t7 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t8 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule and_pos)
(step t9 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule resolution :premises (t6 t7 t8))
(step t10 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule reordering :premises (t9))
(step t11 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule contraction :premises (t10))
(step t12 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t5 t11))
(step t13 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule implies_neg2)
(step t14 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12 t13))
(step t15 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule contraction :premises (t14))
(step t16 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule implies :premises (t15))
(step t17 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t4 t16))
(step t18 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule reordering :premises (t17))
(step t19 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t20 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule reordering :premises (t19))
(step t21 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t22)
(assume t22.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(step t22.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc______prime) (:= smt__y (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))
(step t22.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule or :premises (t22.t1))
(step t22.t3 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t22.t2 t22.a0))
(step t22 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule subproof :discharge (t22.a0))
(step t23 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t21 t22))
(step t24 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule implies_neg2)
(step t25 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule resolution :premises (t23 t24))
(step t26 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule contraction :premises (t25))
(step t27 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule implies :premises (t26))
(step t28 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t27 a17))
(step t29 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t20 a26 t28))
(step t30 (cl (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule or_pos)
(step t31 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule reordering :premises (t30))
(step t32 (cl (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule equiv_pos1)
(step t33 (cl (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule reordering :premises (t32))
(step t34 (cl (not (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule not_or :premises (a29))
(step t35 (cl (not (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))))) (not (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule equiv_pos2)
(step t36 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))) :rule refl)
(step t37 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule refl)
(step t38 (cl (= (= smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule all_simplify)
(step t39 (cl (= (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule cong :premises (t37 t38))
(step t40 (cl (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))))) :rule cong :premises (t36 t39))
(step t41 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t42)
(assume t42.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(step t42.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)))) :rule forall_inst :args ((:= smt__x smt__CONSTANT___c1___) (:= smt__y smt__CONSTANT___clt___)))
(step t42.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule or :premises (t42.t1))
(step t42.t3 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule resolution :premises (t42.t2 t42.a0))
(step t42 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule subproof :discharge (t42.a0))
(step t43 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) :rule resolution :premises (t41 t42))
(step t44 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)))) :rule implies_neg2)
(step t45 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)))) :rule resolution :premises (t43 t44))
(step t46 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)))) :rule contraction :premises (t45))
(step t47 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule resolution :premises (t35 t40 t46))
(step t48 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule implies :premises (t47))
(step t49 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c1___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule resolution :premises (t48 a17))
(step t50 (cl (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule resolution :premises (t33 t34 t49))
(step t51 (cl (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule and_pos)
(step t52 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule reordering :premises (t51))
(step t53 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule or_pos)
(step t54 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule reordering :premises (t53))
(step t55 (cl (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule and_neg)
(step t56 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg1)
(anchor :step t57)
(assume t57.a0 (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))
(assume t57.a1 (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))
(step t57.t1 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg1)
(anchor :step t57.t2)
(assume t57.t2.a0 (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))
(assume t57.t2.a1 (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))
(step t57.t2.t1 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t57.t2.t2 (cl (not (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t57.t2.t1))
(step t57.t2.t3 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t57.t2.t4 (cl (= (smt__TLA______FunDom smt__VARIABLE___alloc___) smt__CONSTANT___Client___)) :rule symm :premises (t57.t2.a1))
(step t57.t2.t5 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule cong :premises (t57.t2.t3 t57.t2.t4))
(step t57.t2.t6 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t57.t2.t7 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t57.t2.t6))
(step t57.t2.t8 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t57.t2.t7 t57.t2.a0))
(step t57.t2.t9 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t57.t2.t5 t57.t2.t8))
(step t57.t2.t10 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t57.t2.t2 t57.t2.t9))
(step t57.t2 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule subproof :discharge (t57.t2.a0 t57.t2.a1))
(step t57.t3 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) :rule and_pos)
(step t57.t4 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t57.t5 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t57.t2 t57.t3 t57.t4))
(step t57.t6 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule reordering :premises (t57.t5))
(step t57.t7 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule contraction :premises (t57.t6))
(step t57.t8 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t57.t1 t57.t7))
(step t57.t9 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg2)
(step t57.t10 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t57.t8 t57.t9))
(step t57.t11 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule contraction :premises (t57.t10))
(step t57.t12 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule implies :premises (t57.t11))
(step t57.t13 (cl (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule and_neg)
(step t57.t14 (cl (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t57.t13 t57.a0 t57.a1))
(step t57.t15 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t57.t12 t57.t14))
(step t57 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule subproof :discharge (t57.a0 t57.a1))
(step t58 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) :rule and_pos)
(step t59 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t60 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t57 t58 t59))
(step t61 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule reordering :premises (t60))
(step t62 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule contraction :premises (t61))
(step t63 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t56 t62))
(step t64 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg2)
(step t65 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t63 t64))
(step t66 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule contraction :premises (t65))
(step t67 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule implies :premises (t66))
(step t68 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t55 t67))
(step t69 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___)) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule reordering :premises (t68))
(step t70 (cl (not (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t71 (cl (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule reordering :premises (t70))
(step t72 (cl (not (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule or_pos)
(step t73 (cl (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule reordering :premises (t72))
(step t74 (cl (not (= (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) (not (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule equiv_pos2)
(step t75 (cl (= (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) (and (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule all_simplify)
(step t76 (cl (= (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (= smt__TLA______Tt___Idv smt__STATE___Mutex___))) :rule all_simplify)
(step t77 (cl (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t78 (cl (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t79 (cl (= (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)))) :rule refl)
(step t80 (cl (= (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule refl)
(step t81 (cl (= (and (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule cong :premises (t76 t77 t78 t79 t80))
(step t82 (cl (= (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule trans :premises (t75 t81))
(step t83 (cl (not (= (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) (not (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule equiv_pos2)
(step t84 (cl (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule resolution :premises (t83 t82 a25))
(step t85 (cl (= smt__TLA______Tt___Idv smt__STATE___Mutex___)) :rule and :premises (t84))
(step t86 (cl (= smt__STATE___Mutex___ smt__STATE___Mutex___)) :rule refl)
(step t87 (cl (= (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (= smt__STATE___Mutex___ smt__STATE___Mutex___))) :rule cong :premises (t85 t86))
(step t88 (cl (= (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t89 (cl (= (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule refl)
(step t90 (cl (= (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)))) :rule refl)
(step t91 (cl (= (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule refl)
(step t92 (cl (= (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and (= smt__STATE___Mutex___ smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule cong :premises (t87 t88 t89 t90 t91))
(step t93 (cl (= (= smt__STATE___Mutex___ smt__STATE___Mutex___) true)) :rule all_simplify)
(step t94 (cl (= (and (= smt__STATE___Mutex___ smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and true (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule cong :premises (t93 t77 t78 t79 t80))
(step t95 (cl (= (and true (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule all_simplify)
(step t96 (cl (= (and (= smt__STATE___Mutex___ smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule trans :premises (t94 t95))
(step t97 (cl (= (and (= smt__TLA______Tt___Idv smt__STATE___Mutex___) (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule trans :premises (t92 t96))
(step t98 (cl (= (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___)))))) :rule trans :premises (t82 t97))
(step t99 (cl (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______Cap smt__STATE___available___ (smt__TLA______FunApp smt__VARIABLE___unsat___ smt__CONSTANT___clt___))))) :rule resolution :premises (t74 t98 a25))
(step t100 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and :premises (t99))
(step t101 (cl (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule implies_neg1)
(anchor :step t102)
(assume t102.a0 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))
(step t102.t1 (cl (or (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule forall_inst :args ((:= smt__a smt__CONSTANT___Client___) (:= smt__b (smt__TLA______Subset smt__CONSTANT___Resource___)) (:= smt__f smt__VARIABLE___alloc___)))
(step t102.t2 (cl (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule or :premises (t102.t1))
(step t102.t3 (cl (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t102.t2 t102.a0))
(step t102 (cl (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule subproof :discharge (t102.a0))
(step t103 (cl (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t101 t102))
(step t104 (cl (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (not (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule implies_neg2)
(step t105 (cl (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule resolution :premises (t103 t104))
(step t106 (cl (=> (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule contraction :premises (t105))
(step t107 (cl (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule implies :premises (t106))
(step t108 (cl (not (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a))))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule equiv_pos2)
(anchor :step t109 :args ((smt__a Idv) (:= smt__a smt__a) (smt__b Idv) (:= smt__b smt__b) (smt__f Idv) (:= smt__f smt__f)))
(step t109.t1 (cl (= smt__a smt__a)) :rule refl)
(step t109.t2 (cl (= smt__b smt__b)) :rule refl)
(step t109.t3 (cl (= smt__f smt__f)) :rule refl)
(step t109.t4 (cl (= (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)))) :rule refl)
(step t109.t5 (cl (= (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__f))) :rule refl)
(step t109.t6 (cl (= (= (smt__TLA______FunDom smt__f) smt__a) (= smt__a (smt__TLA______FunDom smt__f)))) :rule all_simplify)
(step t109.t7 (cl (= (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) :rule cong :premises (t109.t5 t109.t6))
(step t109.t8 (cl (= (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a))) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule cong :premises (t109.t4 t109.t7))
(step t109 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule bind)
(step t110 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule all_simplify)
(step t111 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule trans :premises (t109 t110))
(step t112 (cl (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule resolution :premises (t108 t111 a9))
(step t113 (cl (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t107 t112))
(step t114 (cl (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t73 t100 t113))
(step t115 (cl (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t71 t114))
(step t116 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t69 a22 t115))
(step t117 (cl (not (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))))) (not (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule equiv_pos2)
(step t118 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule refl)
(step t119 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule refl)
(step t120 (cl (= (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule refl)
(step t121 (cl (= (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule refl)
(step t122 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule all_simplify)
(step t123 (cl (= (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule cong :premises (t121 t122))
(step t124 (cl (= (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule cong :premises (t120 t123))
(step t125 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule cong :premises (t119 t124))
(step t126 (cl (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))))) :rule cong :premises (t118 t125))
(step t127 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule implies_neg1)
(anchor :step t128)
(assume t128.a0 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))
(step t128.t1 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (:= smt__z smt__CONSTANT___c1___)))
(step t128.t2 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule or :premises (t128.t1))
(step t128.t3 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t128.t2 t128.a0))
(step t128 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule subproof :discharge (t128.a0))
(step t129 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t127 t128))
(step t130 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule implies_neg2)
(step t131 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule resolution :premises (t129 t130))
(step t132 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule contraction :premises (t131))
(step t133 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule resolution :premises (t117 t126 t132))
(step t134 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule implies :premises (t133))
(step t135 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule equiv_pos2)
(anchor :step t136 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y) (smt__z Idv) (:= smt__z smt__z)))
(step t136.t1 (cl (= smt__f smt__f)) :rule refl)
(step t136.t2 (cl (= smt__x smt__x)) :rule refl)
(step t136.t3 (cl (= smt__y smt__y)) :rule refl)
(step t136.t4 (cl (= smt__z smt__z)) :rule refl)
(step t136.t5 (cl (= (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)))) :rule refl)
(step t136.t6 (cl (= (= smt__z smt__x) (= smt__x smt__z))) :rule all_simplify)
(step t136.t7 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z)))) :rule all_simplify)
(step t136.t8 (cl (= (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))) :rule cong :premises (t136.t6 t136.t7))
(step t136.t9 (cl (= (distinct smt__z smt__x) (not (= smt__z smt__x)))) :rule all_simplify)
(step t136.t10 (cl (= (not (= smt__z smt__x)) (not (= smt__x smt__z)))) :rule cong :premises (t136.t6))
(step t136.t11 (cl (= (distinct smt__z smt__x) (not (= smt__x smt__z)))) :rule trans :premises (t136.t9 t136.t10))
(step t136.t12 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) :rule refl)
(step t136.t13 (cl (= (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule cong :premises (t136.t11 t136.t12))
(step t136.t14 (cl (= (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) :rule cong :premises (t136.t8 t136.t13))
(step t136.t15 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule cong :premises (t136.t5 t136.t14))
(step t136 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule bind)
(step t137 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule all_simplify)
(step t138 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule trans :premises (t136 t137))
(step t139 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule resolution :premises (t135 t138 a14))
(step t140 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule resolution :premises (t134 t139))
(step t141 (cl (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule resolution :premises (t54 t116 t140))
(step t142 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule resolution :premises (t52 t141))
(step t143 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule resolution :premises (t31 t50 t142))
(step t144 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t18 t29 t143))
(step t145 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t146)
(assume t146.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(step t146.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t146.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t146.t1))
(step t146.t3 (cl (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t146.t2 t146.a0))
(step t146 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule subproof :discharge (t146.a0))
(step t147 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t145 t146))
(step t148 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule implies_neg2)
(step t149 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t147 t148))
(step t150 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule contraction :premises (t149))
(step t151 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule implies :premises (t150))
(step t152 (cl (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t151 a17))
(step t153 (cl (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t3 t144 t152))
(step t154 (cl (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule equiv_pos1)
(step t155 (cl (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) :rule reordering :premises (t154))
(step t156 (cl (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule and_neg)
(step t157 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule implies_neg1)
(anchor :step t158)
(assume t158.a0 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t158.a1 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))
(step t158.t1 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule implies_neg1)
(anchor :step t158.t2)
(assume t158.t2.a0 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))
(assume t158.t2.a1 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(step t158.t2.t1 (cl (= (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__VARIABLE___alloc______prime)) :rule symm :premises (t158.t2.a1))
(step t158.t2.t2 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule symm :premises (t158.t2.t1))
(step t158.t2.t3 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t158.t2.t4 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) :rule cong :premises (t158.t2.t2 t158.t2.t3))
(step t158.t2.t5 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule symm :premises (t158.t2.a0))
(step t158.t2.t6 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule trans :premises (t158.t2.t4 t158.t2.t5))
(step t158.t2 (cl (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule subproof :discharge (t158.t2.a0 t158.t2.a1))
(step t158.t3 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) :rule and_pos)
(step t158.t4 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t158.t5 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule resolution :premises (t158.t2 t158.t3 t158.t4))
(step t158.t6 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule reordering :premises (t158.t5))
(step t158.t7 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule contraction :premises (t158.t6))
(step t158.t8 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t158.t1 t158.t7))
(step t158.t9 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule implies_neg2)
(step t158.t10 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule resolution :premises (t158.t8 t158.t9))
(step t158.t11 (cl (=> (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule contraction :premises (t158.t10))
(step t158.t12 (cl (not (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule implies :premises (t158.t11))
(step t158.t13 (cl (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule and_neg)
(step t158.t14 (cl (and (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t158.t13 t158.a1 t158.a0))
(step t158.t15 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t158.t12 t158.t14))
(step t158 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule subproof :discharge (t158.a0 t158.a1))
(step t159 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t160 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) :rule and_pos)
(step t161 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule resolution :premises (t158 t159 t160))
(step t162 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule reordering :premises (t161))
(step t163 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule contraction :premises (t162))
(step t164 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t157 t163))
(step t165 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule implies_neg2)
(step t166 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule resolution :premises (t164 t165))
(step t167 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule contraction :premises (t166))
(step t168 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule implies :premises (t167))
(step t169 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t156 t168))
(step t170 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule reordering :premises (t169))
(step t171 (cl (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) :rule or_pos)
(step t172 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)) (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule reordering :premises (t171))
(step t173 (cl (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule equiv_pos1)
(step t174 (cl (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)))) :rule reordering :premises (t173))
(step t175 (cl (not (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule not_or :premises (a29))
(step t176 (cl (not (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))))) (not (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)))) :rule equiv_pos2)
(step t177 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule refl)
(step t178 (cl (= (= smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule all_simplify)
(step t179 (cl (= (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)))) :rule cong :premises (t177 t178))
(step t180 (cl (= (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))))) :rule cong :premises (t36 t179))
(step t181 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t182)
(assume t182.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(step t182.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)))) :rule forall_inst :args ((:= smt__x smt__CONSTANT___c2___) (:= smt__y smt__CONSTANT___clt___)))
(step t182.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule or :premises (t182.t1))
(step t182.t3 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule resolution :premises (t182.t2 t182.a0))
(step t182 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule subproof :discharge (t182.a0))
(step t183 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) :rule resolution :premises (t181 t182))
(step t184 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (not (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)))) :rule implies_neg2)
(step t185 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)))) :rule resolution :premises (t183 t184))
(step t186 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___c2___ smt__CONSTANT___clt___)))) :rule contraction :premises (t185))
(step t187 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)))) :rule resolution :premises (t176 t180 t186))
(step t188 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule implies :premises (t187))
(step t189 (cl (= (smt__TLA______TrigEq___Idv smt__CONSTANT___c2___ smt__CONSTANT___clt___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule resolution :premises (t188 a17))
(step t190 (cl (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule resolution :premises (t174 t175 t189))
(step t191 (cl (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule and_pos)
(step t192 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))) :rule reordering :premises (t191))
(step t193 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))) (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule or_pos)
(step t194 (cl (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))))) :rule reordering :premises (t193))
(step t195 (cl (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule and_neg)
(step t196 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg1)
(anchor :step t197)
(assume t197.a0 (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))
(assume t197.a1 (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))
(step t197.t1 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg1)
(anchor :step t197.t2)
(assume t197.t2.a0 (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))
(assume t197.t2.a1 (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))
(step t197.t2.t1 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t197.t2.t2 (cl (not (= (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t197.t2.t1))
(step t197.t2.t3 (cl (= smt__CONSTANT___c2___ smt__CONSTANT___c2___)) :rule refl)
(step t197.t2.t4 (cl (= (smt__TLA______FunDom smt__VARIABLE___alloc___) smt__CONSTANT___Client___)) :rule symm :premises (t197.t2.a1))
(step t197.t2.t5 (cl (= (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))) :rule cong :premises (t197.t2.t3 t197.t2.t4))
(step t197.t2.t6 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t197.t2.t7 (cl (= (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t197.t2.t6))
(step t197.t2.t8 (cl (= (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t197.t2.t7 t197.t2.a0))
(step t197.t2.t9 (cl (= (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t197.t2.t5 t197.t2.t8))
(step t197.t2.t10 (cl (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t197.t2.t2 t197.t2.t9))
(step t197.t2 (cl (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule subproof :discharge (t197.t2.a0 t197.t2.a1))
(step t197.t3 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) :rule and_pos)
(step t197.t4 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t197.t5 (cl (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t197.t2 t197.t3 t197.t4))
(step t197.t6 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule reordering :premises (t197.t5))
(step t197.t7 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule contraction :premises (t197.t6))
(step t197.t8 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t197.t1 t197.t7))
(step t197.t9 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg2)
(step t197.t10 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t197.t8 t197.t9))
(step t197.t11 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule contraction :premises (t197.t10))
(step t197.t12 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule implies :premises (t197.t11))
(step t197.t13 (cl (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule and_neg)
(step t197.t14 (cl (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t197.t13 t197.a0 t197.a1))
(step t197.t15 (cl (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t197.t12 t197.t14))
(step t197 (cl (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule subproof :discharge (t197.a0 t197.a1))
(step t198 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) :rule and_pos)
(step t199 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t200 (cl (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t197 t198 t199))
(step t201 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule reordering :premises (t200))
(step t202 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule contraction :premises (t201))
(step t203 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t196 t202))
(step t204 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule implies_neg2)
(step t205 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t203 t204))
(step t206 (cl (=> (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule contraction :premises (t205))
(step t207 (cl (not (and (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule implies :premises (t206))
(step t208 (cl (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t195 t207))
(step t209 (cl (not (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___)) (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule reordering :premises (t208))
(step t210 (cl (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t209 a23 t115))
(step t211 (cl (not (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))))) (not (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))))) :rule equiv_pos2)
(step t212 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule refl)
(step t213 (cl (= (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule refl)
(step t214 (cl (= (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= smt__CONSTANT___clt___ smt__CONSTANT___c2___))) :rule refl)
(step t215 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule all_simplify)
(step t216 (cl (= (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule cong :premises (t214 t215))
(step t217 (cl (= (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))) :rule cong :premises (t213 t216))
(step t218 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))))) :rule cong :premises (t212 t217))
(step t219 (cl (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))))) :rule cong :premises (t118 t218))
(step t220 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule implies_neg1)
(anchor :step t221)
(assume t221.a0 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))
(step t221.t1 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (:= smt__z smt__CONSTANT___c2___)))
(step t221.t2 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) :rule or :premises (t221.t1))
(step t221.t3 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) :rule resolution :premises (t221.t2 t221.a0))
(step t221 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) :rule subproof :discharge (t221.a0))
(step t222 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) :rule resolution :premises (t220 t221))
(step t223 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule implies_neg2)
(step t224 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule resolution :premises (t222 t223))
(step t225 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))))) :rule contraction :premises (t224))
(step t226 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))))) :rule resolution :premises (t211 t219 t225))
(step t227 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))) :rule implies :premises (t226))
(step t228 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c2___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))))) :rule resolution :premises (t227 t139))
(step t229 (cl (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c2___)) (= (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))))) :rule resolution :premises (t194 t210 t228))
(step t230 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c2___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___)))) :rule resolution :premises (t192 t229))
(step t231 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______Cup (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c2___))) :rule resolution :premises (t172 t190 t230))
(step t232 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t170 t29 t231))
(step t233 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) :rule implies_neg1)
(anchor :step t234)
(assume t234.a0 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(step t234.t1 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))
(step t234.t2 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule or :premises (t234.t1))
(step t234.t3 (cl (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule resolution :premises (t234.t2 t234.a0))
(step t234 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule subproof :discharge (t234.a0))
(step t235 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule resolution :premises (t233 t234))
(step t236 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (not (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) :rule implies_neg2)
(step t237 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) :rule resolution :premises (t235 t236))
(step t238 (cl (=> (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))))) :rule contraction :premises (t237))
(step t239 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule implies :premises (t238))
(step t240 (cl (= (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___)))) :rule resolution :premises (t239 a17))
(step t241 (cl (smt__TLA______TrigEq___Idv (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c2___))) :rule resolution :premises (t155 t232 t240))
(step t242 (cl) :rule resolution :premises (t1 t153 t241))


(assume a0 (forall ((smt__x Idv) (smt__y Idv)) (! (=> (forall ((smt__z Idv)) (= (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (= smt__x smt__y)) :pattern ((smt__TLA______SetExtTrigger smt__x smt__y)))))
(assume a1 (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))
(assume a2 (forall ((smt__x Idv) (smt__y Idv) (smt__z Idv)) (! (=> (and (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)) :pattern ((smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______Mem smt__z smt__x)))))
(assume a3 (forall ((smt__a Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Subset smt__a)) (smt__TLA______SubsetEq smt__x smt__a)) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Subset smt__a))) :pattern ((smt__TLA______SubsetEq smt__x smt__a) (smt__TLA______Subset smt__a)))))
(assume a4 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (! (= (smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem smt__x smt__b))) :pattern ((smt__TLA______Mem smt__x (smt__TLA______Cap smt__a smt__b))) :pattern ((smt__TLA______Mem smt__x smt__a) (smt__TLA______Cap smt__a smt__b)) :pattern ((smt__TLA______Mem smt__x smt__b) (smt__TLA______Cap smt__a smt__b)))))
(assume a5 (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______SetMinus smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (not (smt__TLA______Mem smt__x smt__b))))))
(assume a6 (forall ((smt__f Idv) (smt__g Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g) (= (smt__TLA______FunDom smt__f) (smt__TLA______FunDom smt__g)) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp smt__f smt__x) (smt__TLA______FunApp smt__g smt__x))))) (= smt__f smt__g)) :pattern ((smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__g)))))
(assume a7 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (! (=> (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a) (forall ((smt__x Idv)) (=> (smt__TLA______Mem smt__x smt__a) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)))) (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))))))
(assume a8 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))))
(assume a9 (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv) (smt__x Idv)) (! (=> (and (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) (smt__TLA______Mem (smt__TLA______FunApp smt__f smt__x) smt__b)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__x smt__a)) :pattern ((smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______FunApp smt__f smt__x)))))
(assume a10 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (! (smt__TLA______FunIsafcn (smt__TLA______FunExcept smt__f smt__x smt__y)) :pattern ((smt__TLA______FunExcept smt__f smt__x smt__y)))))
(assume a11 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (! (= (smt__TLA______FunDom (smt__TLA______FunExcept smt__f smt__x smt__y)) (smt__TLA______FunDom smt__f)) :pattern ((smt__TLA______FunExcept smt__f smt__x smt__y)))))
(assume a12 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))))
(assume a13 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))
(assume a14 (forall ((smt__x Idv) (smt__y Idv)) (! (smt__TLA______SetExtTrigger (smt__TLA______Cap smt__x smt__y) smt__TLA______SetEnum___0) :pattern ((smt__TLA______Cap smt__x smt__y)))))
(assume a15 (forall ((smt__x Idv)) (! (not (smt__TLA______Mem smt__x smt__TLA______SetEnum___0)) :pattern ((smt__TLA______Mem smt__x smt__TLA______SetEnum___0)))))
(assume a16 (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y))))
(assume a17 (forall ((smt__x Idv) (smt__y Idv)) (! (= (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y) (= smt__x smt__y)) :pattern ((smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y)))))
(assume a18 (forall ((smt__x Idv) (smt__y Idv)) (! (smt__TLA______SetExtTrigger smt__x smt__y) :pattern ((smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__x smt__y)))))
(assume a19 (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))
(assume a20 (smt__TLA______Mem smt__CONSTANT___S___ (smt__TLA______Subset smt__CONSTANT___Resource___)))
(assume a21 (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))
(assume a22 (smt__TLA______Mem smt__CONSTANT___c2___ smt__CONSTANT___Client___))
(assume a23 (smt__TLA______Mem smt__CONSTANT___r___ smt__CONSTANT___Resource___))
(assume a24 (and (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (= smt__STATE___Mutex___ smt__TLA______Tt___Idv) (and (not (smt__TLA______TrigEq___Setdollarsign___Idvdollarsign___ smt__CONSTANT___S___ smt__TLA______SetEnum___0)) (smt__TLA______SubsetEq smt__CONSTANT___S___ (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))) (smt__TLA______Mem smt__CONSTANT___r___ (smt__TLA______Cap (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c2___)))))
(assume a25 (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume a26 (smt__TLA______TrigEq___Idv smt__VARIABLE___unsat______prime smt__VARIABLE___unsat___))
(assume a27 (not (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t1 (cl (not (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t2 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___)))))) :rule reordering :premises (t1))
(step t3 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))) :rule and_pos)
(step t4 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))))) :rule reordering :premises (t3))
(step t5 (cl (not (= (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))))) (not (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule equiv_pos2)
(step t6 (cl (= (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule refl)
(step t7 (cl (= (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule rare_rewrite :args ("bool-double-not-elim" (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t8 (cl (= (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule refl)
(step t9 (cl (= (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))))) :rule cong :premises (t6 t7 t8))
(step t10 (cl (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule and_neg)
(step t11 (cl (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule implies_neg1)
(anchor :step t12)
(assume t12.a0 (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))
(assume t12.a1 (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t12.t1 (cl (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule implies_neg1)
(anchor :step t12.t2)
(assume t12.t2.a0 (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(assume t12.t2.a1 (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))
(step t12.t2.t1 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) false) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule equiv_simplify)
(step t12.t2.t2 (cl (not (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) false)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule equiv1 :premises (t12.t2.t1))
(step t12.t2.t3 (cl (= (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule refl)
(step t12.t2.t4 (cl (= smt__VARIABLE___alloc___ smt__VARIABLE___alloc___)) :rule refl)
(step t12.t2.t5 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)) :rule symm :premises (t12.t2.a1))
(step t12.t2.t6 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule symm :premises (t12.t2.t5))
(step t12.t2.t7 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule cong :premises (t12.t2.t4 t12.t2.t6))
(step t12.t2.t8 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule cong :premises (t12.t2.t3 t12.t2.t7))
(step t12.t2.t9 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_simplify)
(step t12.t2.t10 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv2 :premises (t12.t2.t9))
(step t12.t2.t11 (cl (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule not_not)
(step t12.t2.t12 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t12.t2.t10 t12.t2.t11))
(step t12.t2.t13 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t12.t2.t14 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_pos2)
(anchor :step t12.t2.t15 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t12.t2.t15.t1 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t12.t2.t15 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule sko_forall)
(step t12.t2.t16 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule cong :premises (t12.t2.t15))
(step t12.t2.t17 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or_pos)
(step t12.t2.t18 (cl (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t12.t2.t17))
(step t12.t2.t19 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t12.t2.t20 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t12.t2.t19))
(step t12.t2.t21 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t12.t2.t22 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t12.t2.t22.t1 (cl (= smt__x smt__x)) :rule refl)
(step t12.t2.t22.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t12.t2.t22.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t12.t2.t22.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t12.t2.t22.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t12.t2.t22.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t12.t2.t22.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t12.t2.t22.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t12.t2.t22.t3 t12.t2.t22.t4))
(step t12.t2.t22 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t12.t2.t23 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t12.t2.t23.t1 (cl (= smt__x smt__x)) :rule refl)
(step t12.t2.t23.t2 (cl (= smt__y smt__y)) :rule refl)
(step t12.t2.t23.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t12.t2.t23 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t12.t2.t24 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t12.t2.t22 t12.t2.t23))
(step t12.t2.t25 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t12.t2.t21 t12.t2.t24 a1))
(step t12.t2.t26 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12.t2.t20 t12.t2.t25))
(step t12.t2.t27 (cl (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t12.t2.t18 a27 t12.t2.t26))
(step t12.t2.t28 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t12.t2.t14 t12.t2.t16 t12.t2.t27))
(step t12.t2.t29 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12.t2.t13 t12.t2.t28))
(step t12.t2.t30 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false)) :rule resolution :premises (t12.t2.t12 t12.t2.t29))
(step t12.t2.t31 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) false)) :rule trans :premises (t12.t2.t8 t12.t2.t30))
(step t12.t2.t32 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t12.t2.t2 t12.t2.t31))
(step t12.t2 (cl (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule subproof :discharge (t12.t2.a0 t12.t2.a1))
(step t12.t3 (cl (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule and_pos)
(step t12.t4 (cl (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule and_pos)
(step t12.t5 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))) (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12.t2 t12.t3 t12.t4))
(step t12.t6 (cl (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule reordering :premises (t12.t5))
(step t12.t7 (cl (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule contraction :premises (t12.t6))
(step t12.t8 (cl (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t12.t1 t12.t7))
(step t12.t9 (cl (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule implies_neg2)
(step t12.t10 (cl (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule resolution :premises (t12.t8 t12.t9))
(step t12.t11 (cl (=> (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule contraction :premises (t12.t10))
(step t12.t12 (cl (not (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule implies :premises (t12.t11))
(step t12.t13 (cl (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule and_neg)
(step t12.t14 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t12.t15 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_pos2)
(anchor :step t12.t16 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t12.t16.t1 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t12.t16 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule sko_forall)
(step t12.t17 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule cong :premises (t12.t16))
(step t12.t18 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or_pos)
(step t12.t19 (cl (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t12.t18))
(step t12.t20 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t12.t21 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t12.t20))
(step t12.t22 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t12.t23 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t12.t23.t1 (cl (= smt__x smt__x)) :rule refl)
(step t12.t23.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t12.t23.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t12.t23.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t12.t23.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t12.t23.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t12.t23.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t12.t23.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t12.t23.t3 t12.t23.t4))
(step t12.t23 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t12.t24 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t12.t24.t1 (cl (= smt__x smt__x)) :rule refl)
(step t12.t24.t2 (cl (= smt__y smt__y)) :rule refl)
(step t12.t24.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t12.t24 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t12.t25 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t12.t23 t12.t24))
(step t12.t26 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t12.t22 t12.t25 a1))
(step t12.t27 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12.t21 t12.t26))
(step t12.t28 (cl (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t12.t19 a27 t12.t27))
(step t12.t29 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t12.t15 t12.t17 t12.t28))
(step t12.t30 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t12.t14 t12.t29))
(step t12.t31 (cl (and (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule resolution :premises (t12.t13 t12.t30 t12.a0))
(step t12.t32 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t12.t12 t12.t31))
(step t12 (cl (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule subproof :discharge (t12.a0 t12.a1))
(step t13 (cl (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule and_pos)
(step t14 (cl (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule and_pos)
(step t15 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))) (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t12 t13 t14))
(step t16 (cl (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule reordering :premises (t15))
(step t17 (cl (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule contraction :premises (t16))
(step t18 (cl (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t11 t17))
(step t19 (cl (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule implies_neg2)
(step t20 (cl (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule resolution :premises (t18 t19))
(step t21 (cl (=> (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule contraction :premises (t20))
(step t22 (cl (not (and (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule implies :premises (t21))
(step t23 (cl (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t10 t22))
(step t24 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t25 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule or_neg)
(step t26 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule or_neg)
(step t27 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule resolution :premises (t23 t24 t25 t26))
(step t28 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule contraction :premises (t27))
(step t29 (cl (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___))))) :rule resolution :premises (t5 t9 t28))
(step t30 (cl (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule or :premises (t29))
(step t31 (cl (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule or_pos)
(step t32 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule reordering :premises (t31))
(step t33 (cl (not (= (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule equiv_pos2)
(step t34 (cl (= (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule refl)
(step t35 (cl (= (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule refl)
(step t36 (cl (= (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule refl)
(step t37 (cl (= (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule cong :premises (t34 t35 t36 t7))
(step t38 (cl (not (= (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) (not (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule equiv_pos2)
(step t39 (cl (= (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule refl)
(step t40 (cl (= (= (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule equiv_simplify)
(step t41 (cl (= (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (not (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule equiv2 :premises (t40))
(step t42 (cl (not (not (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule not_not)
(step t43 (cl (= (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t41 t42))
(step t44 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule implies_neg1)
(anchor :step t45)
(assume t45.a0 (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))
(assume t45.a1 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t45.a2 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))
(assume t45.a3 (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t45.t1 (cl (not (= (= false true) false)) (not (= false true)) false) :rule equiv_pos2)
(step t45.t2 (cl (= (= false true) false)) :rule rare_rewrite :args ("evaluate"))
(step t45.t3 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_simplify)
(step t45.t4 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv2 :premises (t45.t3))
(step t45.t5 (cl (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule not_not)
(step t45.t6 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule resolution :premises (t45.t4 t45.t5))
(step t45.t7 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t45.t8 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_pos2)
(anchor :step t45.t9 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t45.t9.t1 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t45.t9 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule sko_forall)
(step t45.t10 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule cong :premises (t45.t9))
(step t45.t11 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or_pos)
(step t45.t12 (cl (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t45.t11))
(step t45.t13 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t45.t14 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t45.t13))
(step t45.t15 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t45.t16 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t45.t16.t1 (cl (= smt__x smt__x)) :rule refl)
(step t45.t16.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t45.t16.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t45.t16.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t45.t16.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t45.t16.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t45.t16.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t45.t16.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t45.t16.t3 t45.t16.t4))
(step t45.t16 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t45.t17 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t45.t17.t1 (cl (= smt__x smt__x)) :rule refl)
(step t45.t17.t2 (cl (= smt__y smt__y)) :rule refl)
(step t45.t17.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t45.t17 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t45.t18 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t45.t16 t45.t17))
(step t45.t19 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t45.t15 t45.t18 a1))
(step t45.t20 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t45.t14 t45.t19))
(step t45.t21 (cl (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t45.t12 a27 t45.t20))
(step t45.t22 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t45.t8 t45.t10 t45.t21))
(step t45.t23 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t45.t7 t45.t22))
(step t45.t24 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) false)) :rule resolution :premises (t45.t6 t45.t23))
(step t45.t25 (cl (= false (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule symm :premises (t45.t24))
(step t45.t26 (cl (= (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule refl)
(step t45.t27 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule symm :premises (t45.a2))
(step t45.t28 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule symm :premises (t45.t27))
(step t45.t29 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t45.t30 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule reordering :premises (t45.t29))
(step t45.t31 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc______prime) (:= smt__y (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))
(step t45.t32 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule or :premises (t45.t31))
(step t45.t33 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t45.t32 a16))
(step t45.t34 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t45.t30 a25 t45.t33))
(step t45.t35 (cl (= (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__VARIABLE___alloc______prime)) :rule symm :premises (t45.t34))
(step t45.t36 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t45.t37 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule cong :premises (t45.t35 t45.t36))
(step t45.t38 (cl (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule trans :premises (t45.t28 t45.t37))
(step t45.t39 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule cong :premises (t45.t26 t45.t38))
(step t45.t40 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv_simplify)
(step t45.t41 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv2 :premises (t45.t40))
(step t45.t42 (cl (not (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv_pos2)
(step t45.t43 (cl (= (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t45.t44 (cl (= (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule rare_rewrite :args ("bool-double-not-elim" (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))
(step t45.t45 (cl (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule cong :premises (t45.t43 t45.t44))
(step t45.t46 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule or_neg)
(step t45.t47 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule or_neg)
(step t45.t48 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule or_neg)
(step t45.t49 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule resolution :premises (t45.t46 t45.t47 t45.t48))
(step t45.t50 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule contraction :premises (t45.t49))
(step t45.t51 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule resolution :premises (t45.t42 t45.t45 t45.t50))
(step t45.t52 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule or :premises (t45.t51))
(step t45.t53 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule reordering :premises (t45.t52))
(step t45.t54 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule resolution :premises (t45.t53 t45.t22))
(step t45.t55 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true)) :rule resolution :premises (t45.t41 t45.t54))
(step t45.t56 (cl (= false true)) :rule trans :premises (t45.t25 t45.t39 t45.t55))
(step t45.t57 (cl false) :rule resolution :premises (t45.t1 t45.t2 t45.t56))
(step t45 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) :rule subproof :discharge (t45.a0 t45.a1 t45.a2 t45.a3))
(step t46 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule and_pos)
(step t47 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t48 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule and_pos)
(step t49 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule and_pos)
(step t50 (cl false (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t45 t46 t47 t48 t49))
(step t51 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) false) :rule reordering :premises (t50))
(step t52 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) false) :rule contraction :premises (t51))
(step t53 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) false) :rule resolution :premises (t44 t52))
(step t54 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (not false)) :rule implies_neg2)
(step t55 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false)) :rule resolution :premises (t53 t54))
(step t56 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false)) :rule contraction :premises (t55))
(step t57 (cl (= (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule implies_simplify)
(step t58 (cl (not (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false)) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule equiv1 :premises (t57))
(step t59 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t56 t58))
(step t60 (cl (= (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false)) :rule resolution :premises (t43 t59))
(step t61 (cl (= (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false))) :rule cong :premises (t39 t60))
(step t62 (cl (= (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) false) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule rare_rewrite :args ("bool-impl-false1" (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))
(step t63 (cl (= (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule trans :premises (t61 t62))
(step t64 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule implies_neg1)
(anchor :step t65)
(assume t65.a0 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t65.a1 (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))
(assume t65.a2 (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))
(assume t65.a3 (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t65.t1 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule and_neg)
(step t65.t2 (cl (not (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv_pos2)
(step t65.t3 (cl (= (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t65.t4 (cl (= (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule rare_rewrite :args ("bool-double-not-elim" (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))
(step t65.t5 (cl (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule cong :premises (t65.t3 t65.t4))
(step t65.t6 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule or_neg)
(step t65.t7 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule or_neg)
(step t65.t8 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule or_neg)
(step t65.t9 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule resolution :premises (t65.t6 t65.t7 t65.t8))
(step t65.t10 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule contraction :premises (t65.t9))
(step t65.t11 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule resolution :premises (t65.t2 t65.t5 t65.t10))
(step t65.t12 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule or :premises (t65.t11))
(step t65.t13 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule reordering :premises (t65.t12))
(step t65.t14 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_pos2)
(anchor :step t65.t15 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t65.t15.t1 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t65.t15 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule sko_forall)
(step t65.t16 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule cong :premises (t65.t15))
(step t65.t17 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or_pos)
(step t65.t18 (cl (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t65.t17))
(step t65.t19 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t65.t20 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t65.t19))
(step t65.t21 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t65.t22 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t65.t22.t1 (cl (= smt__x smt__x)) :rule refl)
(step t65.t22.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t65.t22.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t65.t22.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t65.t22.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t65.t22.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t65.t22.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t65.t22.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t65.t22.t3 t65.t22.t4))
(step t65.t22 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t65.t23 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t65.t23.t1 (cl (= smt__x smt__x)) :rule refl)
(step t65.t23.t2 (cl (= smt__y smt__y)) :rule refl)
(step t65.t23.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t65.t23 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t65.t24 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t65.t22 t65.t23))
(step t65.t25 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t65.t21 t65.t24 a1))
(step t65.t26 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t65.t20 t65.t25))
(step t65.t27 (cl (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t65.t18 a27 t65.t26))
(step t65.t28 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t65.t14 t65.t16 t65.t27))
(step t65.t29 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule resolution :premises (t65.t13 t65.t28))
(step t65.t30 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t65.t31 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule reordering :premises (t65.t30))
(step t65.t32 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc______prime) (:= smt__y (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))
(step t65.t33 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule or :premises (t65.t32))
(step t65.t34 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t65.t33 a16))
(step t65.t35 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t65.t31 a25 t65.t34))
(step t65.t36 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t65.t37 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t65.t36 t65.t28))
(step t65.t38 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t65.t1 t65.t29 t65.t35 t65.a1 t65.t37))
(step t65 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule subproof :discharge (t65.a0 t65.a1 t65.a2 t65.a3))
(step t66 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t67 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule and_pos)
(step t68 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule and_pos)
(step t69 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule and_pos)
(step t70 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t65 t66 t67 t68 t69))
(step t71 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t70))
(step t72 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule contraction :premises (t71))
(step t73 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t64 t72))
(step t74 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule implies_neg2)
(step t75 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t73 t74))
(step t76 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule contraction :premises (t75))
(step t77 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t38 t63 t76))
(step t78 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule not_and :premises (t77))
(step t79 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule or_neg)
(step t80 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule or_neg)
(step t81 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule or_neg)
(step t82 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule or_neg)
(step t83 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t78 t79 t80 t81 t82))
(step t84 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule contraction :premises (t83))
(step t85 (cl (or (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t33 t37 t84))
(step t86 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or :premises (t85))
(step t87 (cl (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule equiv_pos2)
(step t88 (cl (not (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule reordering :premises (t87))
(step t89 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__x smt__VARIABLE___alloc______prime) (:= smt__y (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))))
(step t90 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA______TrigEq___Idv smt__x smt__y) (= smt__x smt__y)))) (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule or :premises (t89))
(step t91 (cl (= (smt__TLA______TrigEq___Idv smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))) :rule resolution :premises (t90 a16))
(step t92 (cl (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t88 a25 t91))
(step t93 (cl (not (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv_pos2)
(step t94 (cl (= (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t95 (cl (= (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule rare_rewrite :args ("bool-double-not-elim" (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))
(step t96 (cl (= (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule cong :premises (t94 t95))
(step t97 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule or_neg)
(step t98 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule or_neg)
(step t99 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (not (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule or_neg)
(step t100 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule resolution :premises (t97 t98 t99))
(step t101 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))))) :rule contraction :premises (t100))
(step t102 (cl (or (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule resolution :premises (t93 t96 t101))
(step t103 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule or :premises (t102))
(step t104 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule reordering :premises (t103))
(step t105 (cl (not (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule equiv_pos2)
(anchor :step t106 :args ((:= smt__z (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t106.t1 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule refl)
(step t106 (cl (= (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule sko_forall)
(step t107 (cl (= (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule cong :premises (t106))
(step t108 (cl (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) :rule or_pos)
(step t109 (cl (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (not (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule reordering :premises (t108))
(step t110 (cl (or (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule forall_inst :args ((:= smt__x (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (:= smt__y (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))
(step t111 (cl (not (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or :premises (t110))
(step t112 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) (not (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule equiv_pos2)
(anchor :step t113 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t113.t1 (cl (= smt__x smt__x)) :rule refl)
(step t113.t2 (cl (= smt__y smt__y)) :rule refl)
(anchor :step t113.t3 :args ((smt__z Idv) (:= smt__z smt__z)))
(step t113.t3.t1 (cl (= smt__z smt__z)) :rule refl)
(step t113.t3.t2 (cl (= (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y)))
(step t113.t3 (cl (= (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))))) :rule bind)
(step t113.t4 (cl (= (smt__TLA______SubsetEq smt__x smt__y) (smt__TLA______SubsetEq smt__x smt__y))) :rule refl)
(step t113.t5 (cl (= (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule cong :premises (t113.t3 t113.t4))
(step t113 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(anchor :step t114 :args ((smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t114.t1 (cl (= smt__x smt__x)) :rule refl)
(step t114.t2 (cl (= smt__y smt__y)) :rule refl)
(step t114.t3 (cl (= (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule rare_rewrite :args ("bool-impl-elim" (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y)))
(step t114 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule bind)
(step t115 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (=> (forall ((smt__z Idv)) (=> (smt__TLA______Mem smt__z smt__x) (smt__TLA______Mem smt__z smt__y))) (smt__TLA______SubsetEq smt__x smt__y))) (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y))))) :rule trans :premises (t113 t114))
(step t116 (cl (forall ((smt__x Idv) (smt__y Idv)) (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z smt__x)) (smt__TLA______Mem smt__z smt__y)))) (smt__TLA______SubsetEq smt__x smt__y)))) :rule resolution :premises (t112 t115 a1))
(step t117 (cl (or (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SubsetEq (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t111 t116))
(step t118 (cl (not (forall ((smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t109 a27 t117))
(step t119 (cl (not (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) :rule resolution :premises (t105 t107 t118))
(step t120 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule resolution :premises (t104 t119))
(step t121 (cl (or (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule or_neg)
(step t122 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) :rule resolution :premises (t121 t119))
(step t123 (cl (not (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule resolution :premises (t86 t92 t120 t122))
(step t124 (cl (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule and_pos)
(step t125 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (not (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule reordering :premises (t124))
(step t126 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule or_pos)
(step t127 (cl (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule reordering :premises (t126))
(step t128 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t129 (cl (not (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t128))
(step t130 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___c1___)) :rule refl)
(step t131 (cl (not (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule and_pos)
(step t132 (cl (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (not (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule reordering :premises (t131))
(step t133 (cl (not (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule or_pos)
(step t134 (cl (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule reordering :premises (t133))
(step t135 (cl (and (smt__TLA______Mem smt__VARIABLE___unsat___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))) (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___))))) :rule and :premises (a24))
(step t136 (cl (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) :rule and :premises (t135))
(step t137 (cl (or (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))))) :rule forall_inst :args ((:= smt__a smt__CONSTANT___Client___) (:= smt__b (smt__TLA______Subset smt__CONSTANT___Resource___)) (:= smt__f smt__VARIABLE___alloc___)))
(step t138 (cl (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule or :premises (t137))
(step t139 (cl (not (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) (not (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a))))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule equiv_pos2)
(anchor :step t140 :args ((smt__a Idv) (:= smt__a smt__a) (smt__b Idv) (:= smt__b smt__b) (smt__f Idv) (:= smt__f smt__f)))
(step t140.t1 (cl (= smt__a smt__a)) :rule refl)
(step t140.t2 (cl (= smt__b smt__b)) :rule refl)
(step t140.t3 (cl (= smt__f smt__f)) :rule refl)
(step t140.t4 (cl (= (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)))) :rule refl)
(step t140.t5 (cl (= (smt__TLA______FunIsafcn smt__f) (smt__TLA______FunIsafcn smt__f))) :rule refl)
(step t140.t6 (cl (= (= (smt__TLA______FunDom smt__f) smt__a) (= smt__a (smt__TLA______FunDom smt__f)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunDom smt__f) smt__a))
(step t140.t7 (cl (= (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) :rule cong :premises (t140.t5 t140.t6))
(step t140.t8 (cl (= (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a))) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule cong :premises (t140.t4 t140.t7))
(step t140 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule bind)
(anchor :step t141 :args ((smt__a Idv) (:= smt__a smt__a) (smt__b Idv) (:= smt__b smt__b) (smt__f Idv) (:= smt__f smt__f)))
(step t141.t1 (cl (= smt__a smt__a)) :rule refl)
(step t141.t2 (cl (= smt__b smt__b)) :rule refl)
(step t141.t3 (cl (= smt__f smt__f)) :rule refl)
(step t141.t4 (cl (= (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))
(step t141 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule bind)
(step t142 (cl (= (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (=> (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b)) (and (smt__TLA______FunIsafcn smt__f) (= (smt__TLA______FunDom smt__f) smt__a)))) (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f))))))) :rule trans :premises (t140 t141))
(step t143 (cl (forall ((smt__a Idv) (smt__b Idv) (smt__f Idv)) (or (not (smt__TLA______Mem smt__f (smt__TLA______FunSet smt__a smt__b))) (and (smt__TLA______FunIsafcn smt__f) (= smt__a (smt__TLA______FunDom smt__f)))))) :rule resolution :premises (t139 t142 a8))
(step t144 (cl (or (not (smt__TLA______Mem smt__VARIABLE___alloc___ (smt__TLA______FunSet smt__CONSTANT___Client___ (smt__TLA______Subset smt__CONSTANT___Resource___)))) (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule resolution :premises (t138 t143))
(step t145 (cl (and (smt__TLA______FunIsafcn smt__VARIABLE___alloc___) (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule resolution :premises (t134 t136 t144))
(step t146 (cl (= smt__CONSTANT___Client___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t132 t145))
(step t147 (cl (= (smt__TLA______FunDom smt__VARIABLE___alloc___) smt__CONSTANT___Client___)) :rule symm :premises (t146))
(step t148 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule cong :premises (t130 t147))
(step t149 (cl (= (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t150 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t149))
(step t151 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t150 a21))
(step t152 (cl (= (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t148 t151))
(step t153 (cl (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t129 t152))
(step t154 (cl (not (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))))) (not (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule equiv_pos2)
(step t155 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule refl)
(step t156 (cl (= (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))))) :rule refl)
(step t157 (cl (= (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule refl)
(step t158 (cl (= (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))) :rule refl)
(step t159 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))
(step t160 (cl (= (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule cong :premises (t158 t159))
(step t161 (cl (= (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule cong :premises (t157 t160))
(step t162 (cl (= (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule cong :premises (t156 t161))
(step t163 (cl (= (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))))) :rule cong :premises (t155 t162))
(step t164 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule implies_neg1)
(anchor :step t165)
(assume t165.a0 (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))
(step t165.t1 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (:= smt__z smt__CONSTANT___c1___)))
(step t165.t2 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule or :premises (t165.t1))
(step t165.t3 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule equiv_pos2)
(anchor :step t165.t4 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y) (smt__z Idv) (:= smt__z smt__z)))
(step t165.t4.t1 (cl (= smt__f smt__f)) :rule refl)
(step t165.t4.t2 (cl (= smt__x smt__x)) :rule refl)
(step t165.t4.t3 (cl (= smt__y smt__y)) :rule refl)
(step t165.t4.t4 (cl (= smt__z smt__z)) :rule refl)
(step t165.t4.t5 (cl (= (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)))) :rule refl)
(step t165.t4.t6 (cl (= (= smt__z smt__x) (= smt__x smt__z))) :rule rare_rewrite :args ("eq-symm" smt__z smt__x))
(step t165.t4.t7 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y))
(step t165.t4.t8 (cl (= (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))) :rule cong :premises (t165.t4.t6 t165.t4.t7))
(step t165.t4.t9 (cl (= (distinct smt__z smt__x) (not (= smt__z smt__x)))) :rule rare_rewrite :args ("distinct-binary-elim" smt__z smt__x))
(step t165.t4.t10 (cl (= (not (= smt__z smt__x)) (not (= smt__x smt__z)))) :rule cong :premises (t165.t4.t6))
(step t165.t4.t11 (cl (= (distinct smt__z smt__x) (not (= smt__x smt__z)))) :rule trans :premises (t165.t4.t9 t165.t4.t10))
(step t165.t4.t12 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) :rule refl)
(step t165.t4.t13 (cl (= (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule cong :premises (t165.t4.t11 t165.t4.t12))
(step t165.t4.t14 (cl (= (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) :rule cong :premises (t165.t4.t8 t165.t4.t13))
(step t165.t4.t15 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule cong :premises (t165.t4.t5 t165.t4.t14))
(step t165.t4 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule bind)
(anchor :step t165.t5 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y) (smt__z Idv) (:= smt__z smt__z)))
(step t165.t5.t1 (cl (= smt__f smt__f)) :rule refl)
(step t165.t5.t2 (cl (= smt__x smt__x)) :rule refl)
(step t165.t5.t3 (cl (= smt__y smt__y)) :rule refl)
(step t165.t5.t4 (cl (= smt__z smt__z)) :rule refl)
(step t165.t5.t5 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))
(step t165.t5.t6 (cl (= (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))))) :rule refl)
(step t165.t5.t7 (cl (= (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))) :rule rare_rewrite :args ("bool-impl-elim" (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))
(step t165.t5.t8 (cl (= (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (not (not (= smt__x smt__z))) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule rare_rewrite :args ("bool-impl-elim" (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))
(step t165.t5.t9 (cl (= (not (not (= smt__x smt__z))) (= smt__x smt__z))) :rule rare_rewrite :args ("bool-double-not-elim" (= smt__x smt__z)))
(step t165.t5.t10 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) :rule refl)
(step t165.t5.t11 (cl (= (or (not (not (= smt__x smt__z))) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule cong :premises (t165.t5.t9 t165.t5.t10))
(step t165.t5.t12 (cl (= (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule trans :premises (t165.t5.t8 t165.t5.t11))
(step t165.t5.t13 (cl (= (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) :rule cong :premises (t165.t5.t7 t165.t5.t12))
(step t165.t5.t14 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule cong :premises (t165.t5.t6 t165.t5.t13))
(step t165.t5.t15 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule trans :premises (t165.t5.t5 t165.t5.t14))
(step t165.t5 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule bind)
(step t165.t6 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule trans :premises (t165.t4 t165.t5))
(step t165.t7 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule resolution :premises (t165.t3 t165.t6 a13))
(step t165.t8 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t165.t2 t165.t7))
(step t165 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule subproof :discharge (t165.a0))
(step t166 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) :rule resolution :premises (t164 t165))
(step t167 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (not (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule implies_neg2)
(step t168 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___)))))) (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule resolution :premises (t166 t167))
(step t169 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule contraction :premises (t168))
(step t170 (cl (=> (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))))) :rule resolution :premises (t154 t163 t169))
(step t171 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule implies :premises (t170))
(step t172 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule equiv_pos2)
(anchor :step t173 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y) (smt__z Idv) (:= smt__z smt__z)))
(step t173.t1 (cl (= smt__f smt__f)) :rule refl)
(step t173.t2 (cl (= smt__x smt__x)) :rule refl)
(step t173.t3 (cl (= smt__y smt__y)) :rule refl)
(step t173.t4 (cl (= smt__z smt__z)) :rule refl)
(step t173.t5 (cl (= (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)))) :rule refl)
(step t173.t6 (cl (= (= smt__z smt__x) (= smt__x smt__z))) :rule rare_rewrite :args ("eq-symm" smt__z smt__x))
(step t173.t7 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y))
(step t173.t8 (cl (= (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))) :rule cong :premises (t173.t6 t173.t7))
(step t173.t9 (cl (= (distinct smt__z smt__x) (not (= smt__z smt__x)))) :rule rare_rewrite :args ("distinct-binary-elim" smt__z smt__x))
(step t173.t10 (cl (= (not (= smt__z smt__x)) (not (= smt__x smt__z)))) :rule cong :premises (t173.t6))
(step t173.t11 (cl (= (distinct smt__z smt__x) (not (= smt__x smt__z)))) :rule trans :premises (t173.t9 t173.t10))
(step t173.t12 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) :rule refl)
(step t173.t13 (cl (= (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule cong :premises (t173.t11 t173.t12))
(step t173.t14 (cl (= (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) :rule cong :premises (t173.t8 t173.t13))
(step t173.t15 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule cong :premises (t173.t5 t173.t14))
(step t173 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule bind)
(anchor :step t174 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y) (smt__z Idv) (:= smt__z smt__z)))
(step t174.t1 (cl (= smt__f smt__f)) :rule refl)
(step t174.t2 (cl (= smt__x smt__x)) :rule refl)
(step t174.t3 (cl (= smt__y smt__y)) :rule refl)
(step t174.t4 (cl (= smt__z smt__z)) :rule refl)
(step t174.t5 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))
(step t174.t6 (cl (= (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))))) :rule refl)
(step t174.t7 (cl (= (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))) :rule rare_rewrite :args ("bool-impl-elim" (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))))
(step t174.t8 (cl (= (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (not (not (= smt__x smt__z))) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule rare_rewrite :args ("bool-impl-elim" (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))
(step t174.t9 (cl (= (not (not (= smt__x smt__z))) (= smt__x smt__z))) :rule rare_rewrite :args ("bool-double-not-elim" (= smt__x smt__z)))
(step t174.t10 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) :rule refl)
(step t174.t11 (cl (= (or (not (not (= smt__x smt__z))) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule cong :premises (t174.t9 t174.t10))
(step t174.t12 (cl (= (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) :rule trans :premises (t174.t8 t174.t11))
(step t174.t13 (cl (= (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) :rule cong :premises (t174.t7 t174.t12))
(step t174.t14 (cl (= (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule cong :premises (t174.t6 t174.t13))
(step t174.t15 (cl (= (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule trans :premises (t174.t5 t174.t14))
(step t174 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__x smt__z) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (=> (not (= smt__x smt__z)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule bind)
(step t175 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (=> (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f)) (and (=> (= smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) smt__y)) (=> (distinct smt__z smt__x) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z)))))))) :rule trans :premises (t173 t174))
(step t176 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv) (smt__z Idv)) (or (not (smt__TLA______Mem smt__z (smt__TLA______FunDom smt__f))) (and (or (not (= smt__x smt__z)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z))) (or (= smt__x smt__z) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__z) (smt__TLA______FunApp smt__f smt__z))))))) :rule resolution :premises (t172 t175 a13))
(step t177 (cl (or (not (smt__TLA______Mem smt__CONSTANT___c1___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))))) :rule resolution :premises (t171 t176))
(step t178 (cl (and (or (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))))) :rule resolution :premises (t127 t153 t177))
(step t179 (cl (or (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___)))) :rule resolution :premises (t125 t178))
(step t180 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule resolution :premises (t32 t123 t179))
(step t181 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)))) :rule resolution :premises (t30 t180 t122))
(step t182 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))))) :rule resolution :premises (t4 t181))
(step t183 (cl (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule and_neg)
(step t184 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule implies_neg1)
(anchor :step t185)
(assume t185.a0 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t185.a1 (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))
(assume t185.a2 (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))
(assume t185.a3 (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))
(step t185.t1 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule implies_neg1)
(anchor :step t185.t2)
(assume t185.t2.a0 (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))
(assume t185.t2.a1 (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(assume t185.t2.a2 (= smt__CONSTANT___clt___ smt__CONSTANT___c1___))
(assume t185.t2.a3 (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))
(step t185.t2.t1 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) true) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule equiv_simplify)
(step t185.t2.t2 (cl (not (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) true)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule equiv1 :premises (t185.t2.t1))
(step t185.t2.t3 (cl (= (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))) :rule refl)
(step t185.t2.t4 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule or_pos)
(step t185.t2.t5 (cl (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule reordering :premises (t185.t2.t4))
(step t185.t2.t6 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t185.t2.t7 (cl (not (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t185.t2.t6))
(step t185.t2.t8 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___clt___)) :rule refl)
(step t185.t2.t9 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule cong :premises (t185.t2.t8 t147))
(step t185.t2.t10 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t185.t2.t11 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t185.t2.t10))
(step t185.t2.t12 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t185.t2.t11 a19))
(step t185.t2.t13 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t185.t2.t9 t185.t2.t12))
(step t185.t2.t14 (cl (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t185.t2.t7 t185.t2.t13))
(step t185.t2.t15 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(step t185.t2.t16 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule or :premises (t185.t2.t15))
(step t185.t2.t17 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule equiv_pos2)
(anchor :step t185.t2.t18 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t185.t2.t18.t1 (cl (= smt__f smt__f)) :rule refl)
(step t185.t2.t18.t2 (cl (= smt__x smt__x)) :rule refl)
(step t185.t2.t18.t3 (cl (= smt__y smt__y)) :rule refl)
(step t185.t2.t18.t4 (cl (= (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)))) :rule refl)
(step t185.t2.t18.t5 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))
(step t185.t2.t18.t6 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule cong :premises (t185.t2.t18.t4 t185.t2.t18.t5))
(step t185.t2.t18 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(anchor :step t185.t2.t19 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t185.t2.t19.t1 (cl (= smt__f smt__f)) :rule refl)
(step t185.t2.t19.t2 (cl (= smt__x smt__x)) :rule refl)
(step t185.t2.t19.t3 (cl (= smt__y smt__y)) :rule refl)
(step t185.t2.t19.t4 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))
(step t185.t2.t19 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(step t185.t2.t20 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule trans :premises (t185.t2.t18 t185.t2.t19))
(step t185.t2.t21 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule resolution :premises (t185.t2.t17 t185.t2.t20 a12))
(step t185.t2.t22 (cl (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule resolution :premises (t185.t2.t16 t185.t2.t21))
(step t185.t2.t23 (cl (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule resolution :premises (t185.t2.t5 t185.t2.t14 t185.t2.t22))
(step t185.t2.t24 (cl (= (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule refl)
(step t185.t2.t25 (cl (= smt__CONSTANT___c1___ smt__CONSTANT___clt___)) :rule symm :premises (t185.t2.a2))
(step t185.t2.t26 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule symm :premises (t185.t2.t25))
(step t185.t2.t27 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___))) :rule cong :premises (t185.t2.t24 t185.t2.t26))
(step t185.t2.t28 (cl (= (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__VARIABLE___alloc______prime)) :rule symm :premises (t92))
(step t185.t2.t29 (cl (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___c1___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule cong :premises (t185.t2.t28 t130))
(step t185.t2.t30 (cl (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule trans :premises (t185.t2.t23 t185.t2.t27 t185.t2.t29))
(step t185.t2.t31 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule cong :premises (t185.t2.t3 t185.t2.t30))
(step t185.t2.t32 (cl (= (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv_simplify)
(step t185.t2.t33 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) :rule equiv2 :premises (t185.t2.t32))
(step t185.t2.t34 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) true)) :rule resolution :premises (t185.t2.t33 t120))
(step t185.t2.t35 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) true)) :rule trans :premises (t185.t2.t31 t185.t2.t34))
(step t185.t2.t36 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t185.t2.t2 t185.t2.t35))
(step t185.t2 (cl (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule subproof :discharge (t185.t2.a0 t185.t2.a1 t185.t2.a2 t185.t2.a3))
(step t185.t3 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule and_pos)
(step t185.t4 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t185.t5 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule and_pos)
(step t185.t6 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule and_pos)
(step t185.t7 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule resolution :premises (t185.t2 t185.t3 t185.t4 t185.t5 t185.t6))
(step t185.t8 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule reordering :premises (t185.t7))
(step t185.t9 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule contraction :premises (t185.t8))
(step t185.t10 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t185.t1 t185.t9))
(step t185.t11 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule implies_neg2)
(step t185.t12 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t185.t10 t185.t11))
(step t185.t13 (cl (=> (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule contraction :premises (t185.t12))
(step t185.t14 (cl (not (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule implies :premises (t185.t13))
(step t185.t15 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule and_neg)
(step t185.t16 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule or_pos)
(step t185.t17 (cl (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule reordering :premises (t185.t16))
(step t185.t18 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t185.t19 (cl (not (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t185.t18))
(step t185.t20 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___clt___)) :rule refl)
(step t185.t21 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule cong :premises (t185.t20 t147))
(step t185.t22 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t185.t23 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t185.t22))
(step t185.t24 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t185.t23 a19))
(step t185.t25 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t185.t21 t185.t24))
(step t185.t26 (cl (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t185.t19 t185.t25))
(step t185.t27 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(step t185.t28 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule or :premises (t185.t27))
(step t185.t29 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule equiv_pos2)
(anchor :step t185.t30 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t185.t30.t1 (cl (= smt__f smt__f)) :rule refl)
(step t185.t30.t2 (cl (= smt__x smt__x)) :rule refl)
(step t185.t30.t3 (cl (= smt__y smt__y)) :rule refl)
(step t185.t30.t4 (cl (= (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)))) :rule refl)
(step t185.t30.t5 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))
(step t185.t30.t6 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule cong :premises (t185.t30.t4 t185.t30.t5))
(step t185.t30 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(anchor :step t185.t31 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t185.t31.t1 (cl (= smt__f smt__f)) :rule refl)
(step t185.t31.t2 (cl (= smt__x smt__x)) :rule refl)
(step t185.t31.t3 (cl (= smt__y smt__y)) :rule refl)
(step t185.t31.t4 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))
(step t185.t31 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(step t185.t32 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule trans :premises (t185.t30 t185.t31))
(step t185.t33 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule resolution :premises (t185.t29 t185.t32 a12))
(step t185.t34 (cl (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule resolution :premises (t185.t28 t185.t33))
(step t185.t35 (cl (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule resolution :premises (t185.t17 t185.t26 t185.t34))
(step t185.t36 (cl (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule resolution :premises (t185.t15 t120 t92 t185.a2 t185.t35))
(step t185.t37 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t185.t14 t185.t36))
(step t185 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule subproof :discharge (t185.a0 t185.a1 t185.a2 t185.a3))
(step t186 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule and_pos)
(step t187 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule and_pos)
(step t188 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) :rule and_pos)
(step t189 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) :rule and_pos)
(step t190 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))))) :rule resolution :premises (t185 t186 t187 t188 t189))
(step t191 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule reordering :premises (t190))
(step t192 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule contraction :premises (t191))
(step t193 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t184 t192))
(step t194 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule implies_neg2)
(step t195 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule resolution :premises (t193 t194))
(step t196 (cl (=> (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) :rule contraction :premises (t195))
(step t197 (cl (not (and (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (= smt__CONSTANT___clt___ smt__CONSTANT___c1___) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___)))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule implies :premises (t196))
(step t198 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t183 t197))
(step t199 (cl (not (= smt__VARIABLE___alloc______prime (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)))) (not (= smt__CONSTANT___clt___ smt__CONSTANT___c1___)) (not (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule reordering :premises (t198))
(step t200 (cl (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule or_pos)
(step t201 (cl (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)) (not (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule reordering :premises (t200))
(step t202 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)))) :rule equiv_simplify)
(step t203 (cl (not (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule equiv1 :premises (t202))
(step t204 (cl (= smt__CONSTANT___clt___ smt__CONSTANT___clt___)) :rule refl)
(step t205 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule cong :premises (t204 t147))
(step t206 (cl (= (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv_simplify)
(step t207 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true) (not (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___))) :rule equiv2 :premises (t206))
(step t208 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ smt__CONSTANT___Client___) true)) :rule resolution :premises (t207 a19))
(step t209 (cl (= (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___)) true)) :rule trans :premises (t205 t208))
(step t210 (cl (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) :rule resolution :premises (t203 t209))
(step t211 (cl (or (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))))) :rule forall_inst :args ((:= smt__f smt__VARIABLE___alloc___) (:= smt__x smt__CONSTANT___clt___) (:= smt__y (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))))
(step t212 (cl (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule or :premises (t211))
(step t213 (cl (not (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) (not (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule equiv_pos2)
(anchor :step t214 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t214.t1 (cl (= smt__f smt__f)) :rule refl)
(step t214.t2 (cl (= smt__x smt__x)) :rule refl)
(step t214.t3 (cl (= smt__y smt__y)) :rule refl)
(step t214.t4 (cl (= (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)))) :rule refl)
(step t214.t5 (cl (= (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) :rule rare_rewrite :args ("eq-symm" (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))
(step t214.t6 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule cong :premises (t214.t4 t214.t5))
(step t214 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(anchor :step t215 :args ((smt__f Idv) (:= smt__f smt__f) (smt__x Idv) (:= smt__x smt__x) (smt__y Idv) (:= smt__y smt__y)))
(step t215.t1 (cl (= smt__f smt__f)) :rule refl)
(step t215.t2 (cl (= smt__x smt__x)) :rule refl)
(step t215.t3 (cl (= smt__y smt__y)) :rule refl)
(step t215.t4 (cl (= (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule rare_rewrite :args ("bool-impl-elim" (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))
(step t215 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule bind)
(step t216 (cl (= (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (=> (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f)) (= (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x) smt__y))) (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x)))))) :rule trans :premises (t214 t215))
(step t217 (cl (forall ((smt__f Idv) (smt__x Idv) (smt__y Idv)) (or (not (smt__TLA______Mem smt__x (smt__TLA______FunDom smt__f))) (= smt__y (smt__TLA______FunApp (smt__TLA______FunExcept smt__f smt__x smt__y) smt__x))))) :rule resolution :premises (t213 t216 a12))
(step t218 (cl (or (not (smt__TLA______Mem smt__CONSTANT___clt___ (smt__TLA______FunDom smt__VARIABLE___alloc___))) (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___)))) :rule resolution :premises (t212 t217))
(step t219 (cl (= (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___) (smt__TLA______FunApp (smt__TLA______FunExcept smt__VARIABLE___alloc___ smt__CONSTANT___clt___ (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) smt__CONSTANT___clt___))) :rule resolution :premises (t201 t210 t218))
(step t220 (cl (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___))) :rule resolution :premises (t199 t92 t180 t219 t120))
(step t221 (cl (or (not (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______SetMinus smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (not (smt__TLA______Mem smt__x smt__b)))))) (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___)))))) :rule forall_inst :args ((:= smt__a (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (:= smt__b smt__CONSTANT___S___) (:= smt__x (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))))))
(step t222 (cl (not (forall ((smt__a Idv) (smt__b Idv) (smt__x Idv)) (= (smt__TLA______Mem smt__x (smt__TLA______SetMinus smt__a smt__b)) (and (smt__TLA______Mem smt__x smt__a) (not (smt__TLA______Mem smt__x smt__b)))))) (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))))) :rule or :premises (t221))
(step t223 (cl (= (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______SetMinus (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___) smt__CONSTANT___S___)) (and (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___clt___)) (not (smt__TLA______Mem (choice ((smt__z Idv)) (not (or (not (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc______prime smt__CONSTANT___c1___))) (smt__TLA______Mem smt__z (smt__TLA______FunApp smt__VARIABLE___alloc___ smt__CONSTANT___c1___))))) smt__CONSTANT___S___))))) :rule resolution :premises (t222 a5))
(step t224 (cl) :rule resolution :premises (t2 t182 t220 t223))

